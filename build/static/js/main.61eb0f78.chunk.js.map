{"version":3,"sources":["actions/loginModal.js","Components/LoginModal/LoginModalField/index.js","Components/LoginModal/index.js","containers/loginModal.js","Components/SideBar/index.js","containers/sideBar.js","Components/Header/index.js","containers/header.js","Components/Footer/index.js","Components/Map/index.js","actions/createGroup.js","containers/map.js","Components/HomeContent/index.js","Components/SliderPart/index.js","containers/sliderPart.js","actions/home.js","Components/Home/index.js","containers/home.js","Components/CGU/index.js","Components/GroupCards/GroupCard/index.js","Components/MyGroups/index.js","Components/GroupCards/index.js","Components/FindGroup/index.js","containers/findGroup.js","actions/findGroup.js","Components/CreateGroup/FieldCreateGroup/index.js","Components/CreateGroup/FieldCreateGroup/textArea.js","Components/CreateGroup/index.js","containers/createGroup.js","Components/SignUp/SignUpField/index.js","Components/SignUp/SignUpField/selectField.js","Components/SignUp/SignUpField/textArea.js","Components/SignUp/SignUpField/inputFile.js","Components/SignUp/index.js","actions/signUp.js","containers/signUp.js","Components/Profil/index.js","containers/profil.js","actions/profil.js","Components/FormChat/index.js","containers/formChat.js","actions/chat.js","Components/Messages/Message.js","Components/Messages/index.js","containers/Messages.js","Components/GroupPage/index.js","containers/groupPage.js","Components/NotFound/index.js","Components/Spinner/index.js","Components/App/index.js","containers/app.js","serviceWorker.js","reducers/signUp.js","reducers/loginModal.js","reducers/createGroup.js","reducers/findGroup.js","reducers/profil.js","reducers/chat.js","reducers/sliderPart.js","actions/spinner.js","reducers/spinner.js","reducers/map.js","reducers/index.js","middlewares/logMiddleware.js","config/index.js","middlewares/signUpMiddleware.js","middlewares/loginModalMiddleware.js","middlewares/sliderMiddleware.js","actions/sliderPart.js","middlewares/createGroupMiddleware.js","middlewares/homeMiddleware.js","store/index.js","index.js"],"names":["logOut","type","saveUser","logged","LoginModalField","value","name","placeholder","onChange","inputId","className","length","htmlFor","evt","target","id","defaultProps","LoginModal","email","password","changeField","handleLogin","show","handleLogout","isLogged","loggedMessage","openModal","React","useState","Modal","onClose","onOpen","open","size","Form","onSubmit","preventDefault","console","log","style","display","flexDirection","justifyContent","alignItems","to","Button","Actions","color","onClick","LoginContainer","connect","state","loginModal","settings","dispatch","changeLoginFieldValue","SideBar","visible","Grid","columns","Column","Sidebar","as","Menu","animation","inverted","vertical","Item","Icon","SideBarContainer","Header","setOpen","useEffect","src","alt","activeClassName","viewBox","width","height","y","HeaderContainer","Footer","circular","pointerIcon","L","iconUrl","iconAnchor","popupAnchor","iconSize","shadowSize","shadowAnchor","MapLeaf","handleOnClick","setLatLng","description","markers","getZoom","valueZoom","city","country","adress","updateValueCountry","updateValueCity","updateValueAdress","latitude","longitude","mapRef","useRef","zoom","navigator","geolocation","getCurrentPosition","position","coords","error","enableHighAccuracy","current","map","leafletElement","control","geosearch","useMapBounds","title","expanded","addTo","on","e","results","latlng","lat","lng","geocoder","Control","Geocoder","nominatim","reverse","options","crs","scale","properties","address","municipality","road","Map","ref","center","TileLayer","url","attribution","Marker","Popup","key","icon","href","setLatin","MapLeafContainer","createGroup","group","HomeContent","SliderPart","lastDogs","SliderContainer","fetchDataDog","Home","mapMarkers","HomeContainer","sliderPart","sliderDog","CGU","GroupCard","lastActivity","nameGroup","numbers","action","MyGroups","GroupCards","dataFindGroup","FindGroup","event","FindGroupContainer","findGroup","inputValue","inputName","FieldCreateGroup","label","required","TextAreaExample","TextArea","CreateGroup","changeZoom","_animateToZoom","CreateGroupContainer","Field","SelectExample","Select","data","files","sexe","text","race","age","taille","SignUp","first_name","changeFieldUser","breed","sex","agee","changeFieldSelect","isFlipped","tosChek","changeIsFlipped","changeCheckTos","createUser","changeFieldAnimal","createAnimal","img","focus","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","infinite","autocomplete","Checkbox","saveIdUser","user_id","SignUpContainer","signUp","user","animal","handleSignUp","selectFieldValue","selectFieldName","Profil","ProfilContainer","profil","FormChat","sendMessage","changeMessage","addMessage","messages","author","maRef","FormChatContainer","chat","currentMessage","message","Message","owner","classNames","Messages","messagesDivRef","scrollTo","scrollHeight","MessagesContainer","GroupPage","GroupPageContainer","NotFound","Spinner","App","checkIsLogged","loading","path","exact","component","AppContainer","spinner","Boolean","window","location","hostname","match","initialState","infos","newState","created_by","ChatReducer","newMessage","SliderReducer","lastAnimalsSignedUp","setLoadingState","valueLoading","allGroups","combineReducers","logMiddleware","store","next","getState","baseURL","signUpMiddleware","axios","post","then","result","catch","loginModalMiddleWare","withCredentials","response","finally","sliderMiddleware","newDog","createGroupMiddleware","homeMiddleware","get","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","loginModalMiddleware","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61eb0f78.chunk.js","sourcesContent":["export const CHANGE_LOGIN_FIELD_VALUE = 'CHANGE_LOGIN_FIELD_VALUE';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SAVE_USER = 'SAVE_USER';\nexport const CHECK_IS_LOGGED = 'CHECK_IS_LOGGED';\nexport const OPEN_MODAL = 'OPEN_MODAL';\n\nexport const changeLoginFieldValue = (value, name) => ({\n    type: CHANGE_LOGIN_FIELD_VALUE,\n    value,\n    name,\n});\nexport const openModal = () => ({\n    type: OPEN_MODAL,\n});\nexport const logIn = () => ({\n    type: LOG_IN,\n});\n\nexport const logOut = () => ({\n    type: LOG_OUT,\n});\n\nexport const saveUser = ({ logged }) => ({\n    type: SAVE_USER,\n    logged,\n\n});\n\nexport const checkIsLogged = () => ({\n    type: CHECK_IS_LOGGED,\n});\n","// == Import : npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './field.scss';\n\n// == Import : local\n\n// == Composant\nconst LoginModalField = ({\n  // \n  value,\n  type,\n  name,\n  placeholder,\n  onChange,\n  \n}) => {\n  const handleChange = (evt) => {\n    onChange(evt.target.value, name);\n    // A chaque modificication dans l'input, je recupere la valeur de celui ci, ainsi que son type via le name\n  };\n\n  const inputId = `field-${name}`;\n\n  return (\n    <div className={value.length > 0 ? 'field field--has-content' : 'field'}>\n\n        <label\n            htmlFor={inputId}\n            className=\"field-label\"\n        >\n            {placeholder}\n        </label>\n        <input\n            // React - state\n            value={value}\n            onChange={handleChange}\n            // infos de base\n            id={inputId}\n            type={type}\n            className=\"field-input\"\n            placeholder={placeholder}\n            name={name}\n        />\n\n        \n    </div>\n    );\n};\n\nLoginModalField.propTypes = {\n  value: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// Valeurs par défaut pour les props\nLoginModalField.defaultProps = {\n  value: '',\n  type: 'text',\n};\n\n\n// == Export\nexport default LoginModalField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Image, Modal, Checkbox, Form } from 'semantic-ui-react';\nimport LoginModalField from './LoginModalField';\nimport './loginModal.scss'\n\nconst LoginModal = ({\n  email, // Value du champ email\n  password, // Value du champ password\n  changeField, // Fonction qui met à jour le champ avec 2 params value et name du champ\n  handleLogin, // Fonction à la soumission du formulaire sans param\n  handleLogout, // Fonction permettant de se déconnecter sans param\n  isLogged, // Booléen qui représente l'état de connexion\n  loggedMessage, // Un message qui va s'afficher quand on est connecté\n  show,\n  openModal,\n}) => {\n    const handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(\"je submit mon formulaire\")\n    \n    handleLogin();\n    };\n    const [open, setOpen] = React.useState(true);\n    return (\n\n    <Modal\n        onClose={openModal}\n        onOpen={openModal}\n        open={show}\n        // trigger={<a className=\"footer-tableNavBar-text\">Se connecter</a>}\n        size='small'\n        className=\"Modal-div\"\n        >\n        \n\n        <p className=\"loginModal-title\">Connexion </p>\n\n        <Form  className=\"LoginForm\" onSubmit={handleSubmit} style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        \n            <LoginModalField \n            className=\"input-form\" \n            id=\"email\" \n            name=\"email\" \n            type=\"email\"\n            placeholder='Adresse email'\n            onChange={changeField}\n            value={email} />\n\n\n            <LoginModalField \n            id=\"password\" \n            name=\"password\" \n            placeholder='Mot de passe' \n            onChange={changeField}\n            value={password}\n            type=\"password\"\n            />\n            <Link to=\"\">\n            <p className=\"forgotPassword\"> J'ai oublié mon mot de passe </p>\n            </Link>\n\n            <Button \n            type='submit' \n            className=\"btn-connexion\"\n            >\n            Me connecter \n            </Button>\n\n        </Form>\n        <Modal.Actions className=\"actionModalContainer\">\n            <Link\n            color='red' \n            to=\"/inscription\" \n            className=\"btn-signUp\"\n            onClick={ openModal }>\n                Je n'ai pas de compte !\n            </Link>\n            <Button \n            color='black' \n            onClick={openModal}>\n                Annuler\n            </Button>\n        {/* <Button\n            content=\"Yep, that's me\"\n            labelPosition='right'\n            icon='checkmark'\n            onClick={() => setOpen(false)}\n            positive\n            /> */}\n        </Modal.Actions>\n    </Modal>\n    )\n};\nLoginModal.propTypes = {\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    changeField: PropTypes.func.isRequired,\n    handleLogin: PropTypes.func.isRequired,\n    handleLogout: PropTypes.func.isRequired,\n    isLogged: PropTypes.bool,\n    loggedMessage: PropTypes.string,\n};\n\n\nexport default LoginModal;","import { connect } from 'react-redux';\nimport {\n  changeLoginFieldValue,\n  logIn,\n  logOut,\n  openModal,\n} from '../actions/loginModal';\n\nimport LoginModal from '../Components/LoginModal';\n\nconst mapStateToProps = (state) => ({\n  email: state.loginModal.email,\n  password: state.loginModal.password,\n  isLogged: state.loginModal.isLogged,\n  show: state.loginModal.settings.display,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeField: (value, name) => {\n    dispatch(changeLoginFieldValue(value, name));\n  },\n  handleLogin: () => {\n    dispatch(logIn());\n  },\n\n  openModal:() => {\n    dispatch(openModal());\n  }\n});\n\n// Container\nconst LoginContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginModal);\n\n// == Export\nexport default LoginContainer;\n","import React from \"react\";\nimport LoginModal from '../../containers/loginModal';\nimport {\n    Checkbox,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Menu,\n    Segment,\n    Sidebar\n    \n} from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport './sideBar.scss';\n\nconst SideBar = ({openModal,handleLogout, isLogged}) => {\n    const [visible, setVisible] = React.useState(false);\n\n    return (\n        <Grid columns={1}>\n\n\n        <Grid.Column>\n\n            <Sidebar\n                as={Menu}\n                animation=\"overlay\"\n                inverted\n                vertical\n                visible={!visible}\n                size=\"small\"\n            >\n            {isLogged && (\n                <>\n                <Menu.Item as=\"a\">\n                <Icon name=\"search\" size=\"big\" />\n                <Link to=\"/trouver-un-groupe\" className=\"navBar-item\">\n                Trouver un groupe\n                </Link>\n                </Menu.Item>\n\n                <Menu.Item as=\"a\">\n                <Icon name=\"group\" size=\"big\"/>\n                <Link to=\"/mes-groupes\" className=\"navBar-item\">\n                Mes groupes\n                </Link>\n                </Menu.Item>\n                \n                \n\n                <Menu.Item as=\"a\">\n                <Icon name=\"paw\" size=\"big\"/>\n                <Link to=\"/profil\" className=\"navBar-item\">\n                Mon profil\n                </Link>\n                </Menu.Item>\n\n                <Menu.Item as=\"a\">\n                <Icon name=\"settings\" size=\"big\"/>\n                <Link to=\"/deconnexion\" className=\"navBar-item\">\n                Parmetres du compte\n                </Link>\n                </Menu.Item>\n\n                <Menu.Item as=\"a\">\n                <Icon name=\"sign-out\" size=\"big\"/>\n                <Link to=\"/\" className=\"navBar-item\" onClick={handleLogout}>\n                Deconnexion\n                </Link>\n                </Menu.Item>\n                </>\n            )}\n            {!isLogged && (\n                <>\n                <Menu.Item as=\"a\">\n                <Icon name=\"signup\" size=\"big\"/>\n                <Link to=\"/inscription\" className=\"navBar-item\">\n                s'inscrire\n                </Link>\n                </Menu.Item>\n\n                <Menu.Item as=\"a\" >\n                <Icon name=\"sign-in\" size=\"big\" />\n                <Link to=\"/\" className=\"navBar-item\" onClick={openModal}>\n                Se connecter\n                </Link>\n                </Menu.Item>\n\n                <Menu.Item as=\"a\">\n                <Icon name=\"search\" size=\"big\" />\n                <Link to=\"/trouver-un-groupe\" className=\"navBar-item\">\n                Trouver un groupe\n                </Link>\n                </Menu.Item>\n                </>\n            )}\n                \n\n                \n                \n            </Sidebar>\n\n        </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default SideBar;\n","import { connect } from 'react-redux';\nimport {\n    logOut,\n    openModal,\n} from '../actions/loginModal';\nimport SideBar from '../Components/SideBar'\n\n\nconst mapStateToProps = (state) => ({\nisLogged: state.loginModal.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    openModal:() => {\n        dispatch(openModal());\n    },\n    handleLogout: () => {\n    dispatch(logOut());\n  },\n});\n\n// Container\nconst SideBarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SideBar);\n\n// == Export\nexport default SideBarContainer;\n","import React, {useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SideBar from '../../containers/sideBar';\n\n//Import Components\nimport { Link , NavLink } from 'react-router-dom';\nimport LoginModal from '../../containers/loginModal';\n\n\n// Import Css\nimport './header.scss';\n\n\n\nconst Header = ({isLogged, handleLogout, visible, openModal}) => {\n\nconst [open, setOpen] = useState(false);\n\n\n    useEffect(() => {\n\n    }, [])\n\n\n    return(\n        <div className=\"navigation\">\n            <div className=\"navigation-logo\">\n            <Link to=\"/\">\n                <img src=\"image/logoWithMask.png\" alt=\"Logo du site\" className=\"navigation-logo-img\"/>\n            </Link>\n            </div>\n            <div className=\"navigation-brandTitle\">MeetMyPet</div>\n            <div className=\"navigation-navBar-destop\">\n                \n                {isLogged && (\n                    <nav>\n                    <NavLink to=\"/trouver-un-groupe\" className=\"navBar-destop-items\" activeClassName=\"\">\n                        Trouver des groupes\n                    </NavLink>\n                    <NavLink to=\"/profil\" className=\"navBar-destop-items \" activeClassName=\"\">\n                        Mon profil\n                    </NavLink>\n                    <NavLink to=\"/groupe\" className=\"navBar-destop-items \" activeClassName=\"\">\n                        Page d'un groupe\n                    </NavLink>\n                    <NavLink to=\"/\" className=\"navBar-destop-items \" activeClassName=\"\" onClick={handleLogout}>\n                        Deconnexion\n                    </NavLink>\n                    </nav>\n                )}\n                {!isLogged && (\n                <nav>\n                    <NavLink to=\"/trouver-un-groupe\" className=\"navBar-destop-items\" activeClassName=\"\">\n                        Trouver des groupes\n                    </NavLink>\n                    <NavLink to=\"/inscription\" className=\"navBar-destop-items\" activeClassName=\"\">\n                        S'inscrire\n                    </NavLink>\n                    <NavLink to=\"/\" className=\"navBar-destop-items \" activeClassName=\"\" onClick={openModal}>\n                        Se connecter\n                    </NavLink>\n                </nav>\n                )}\n                    \n                \n            </div>\n            <LoginModal />\n            <div className=\"navigation-navBar-mobile\" onClick={() => setOpen(!open)} open={open}>\n                <svg viewBox=\"0 0 100 80\" width=\"40\" height=\"30\" >\n                    <rect width=\"100\" height=\"10\"></rect>\n                    <rect y=\"30\" width=\"100\" height=\"10\"></rect>\n                    <rect y=\"60\" width=\"100\" height=\"10\"></rect>\n                </svg>\n                {open && <SideBar /> }\n            </div>\n        </div>\n    )\n};\n\nHeader.propTypes = {\n    isLogged: PropTypes.bool.isRequired,\n    handleLogout: PropTypes.func.isRequired,\n}\nHeader.defaultProps = {\n    isLogged : false,\n}\n\nexport default Header;","import { connect } from 'react-redux';\nimport {\n    openModal,\n    logOut,\n} from '../actions/loginModal';\nimport Header from '../Components/Header'\n\n\nconst mapStateToProps = (state) => ({\nisLogged: state.loginModal.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    openModal:() => {\n        dispatch(openModal());\n    },\n      handleLogout: () => {\n    dispatch(logOut());\n  },\n});\n\n// Container\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Header);\n\n// == Export\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react'\nimport LoginModal from '../LoginModal';\n\n\n//Import Components\n\n// Import Css\nimport './footer.scss';\n\nconst Footer = () => {\n    return(\n        <div className=\"footer\">\n        <div className=\"goToTheTop\"></div>\n                <div className=\"footer-content-mid\">\n                    <Link to=\"\" className=\"RS\">\n                        <Icon circular name='facebook f' color='teal' size='large' inverted />\n                    </Link>\n                    <Link to=\"\" className=\"RS\">\n                        <Icon circular name='instagram' color='teal' size='large' inverted/>\n                    </Link>\n                    <Link to=\"\" className=\"RS\">\n                        <Icon circular name='twitter' color='teal' size='large' inverted/>\n                    </Link>\n                    <Link to=\"\" className=\"RS\">\n                        <Icon circular name='linkedin' color='teal' size='large' inverted/>\n                    </Link>\n                </div>\n            <div className=\"footer-tableNavBar\">\n                <Link to=\"/\" className=\"footer-tableNavBar-text\">Accueil</Link>\n                <Link to=\"/inscription\" className=\"footer-tableNavBar-text\">Créer un compte</Link>\n                <Link to=\"\" className=\"footer-tableNavBar-text\"><LoginModal /></Link>\n                <Link to=\"/trouver-un-groupe\" className=\"footer-tableNavBar-text\">Trouver un groupe</Link>\n                <Link to=\"/connexion\" className=\"footer-tableNavBar-text\">Se connecter</Link>\n\n            </div>\n            <div className=\"footer-content\">\n                <div className=\"footer-content-mid\">\n                    <Link to=\"\" className=\"footer-adds footer-link\">Confidentialité</Link>\n                    <Link to=\"/CGU\" className=\"footer-adds footer-link\">CGU</Link>\n                    <Link to=\"\" className=\"footer-adds footer-link\">Nous contacter</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useRef, useEffect, useState } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport PropTypes from 'prop-types';\nimport LCG from 'leaflet-control-geocoder';\nimport { geosearch } from 'esri-leaflet-geocoder';\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css';\n\n\nimport './map.scss';\n\n// const data = [\n//   {'id' : 1, 'name': 'groupe1', 'position': [48.937273240530864, 2.473385676029847], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 2, 'name': 'groupe2', 'position': [48.93546901970919, 2.3633195709367665], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 3, 'name': 'groupe3', 'position': [48.879505826714976, 2.2369596574562016], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 4, 'name': 'groupe4', 'position': [48.71486463081653, 2.2315921870429505], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 5, 'name': 'groupe5', 'position': [48.6731664567893, 2.3883159065811115], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 6, 'name': 'groupe6', 'position': [49.00972640197625, 2.2878914053358606], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n//   {'id' : 7, 'name': 'groupe7', 'position': [48.96793501774901, 2.0775721994282974], 'description': 'Lorem Ipsum is simply dummy text of the printing and typesetting'},\n// ]\n// Tableau pour définir l'icon sur la page Home,\nconst pointerIcon = new L.Icon({\n  iconUrl: 'image/Icon.png',\n  iconAnchor: [5, 55],\n  popupAnchor: [10, -44],\n  iconSize: [25, 40],\n  shadowSize: [68, 95],\n  shadowAnchor: [20, 92],\n})\n\nfunction MapLeaf({\n  handleOnClick,\n  setLatLng,\n  name,\n  description,\n  markers,\n  getZoom,\n  valueZoom,\n  city,\n  country,\n  adress,\n  updateValueCountry,\n  updateValueCity,\n  updateValueAdress,\n  latitude,\n  longitude,\n  }) {\n\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(13);\n  useEffect(() => {\n\n  })\n\n  useEffect(() => {\n    // Ici je viens récuperer les coordonnées GPS du user et je vais les stocker dans le state\n    navigator.geolocation.getCurrentPosition(\n        function (position) {\n          setLatLng(position.coords.latitude, position.coords.longitude)\n        },\n        function (error) {\n          console.log(error)\n        },\n        {\n              enableHighAccuracy: true\n        }\n    )\n  const { current = {} } = mapRef;\n  const {leafletElement: map} = current\n  // La variable control représente la searchBar sur la map, je lui passe un objet de configuration\n  const control = geosearch({\n    useMapBounds: false,\n    placeholder: \"Rechercher des lieux ou des adresses\",\n    title: 'Rechercher un emplacement',\n    position: 'bottomright',\n    expanded: true,\n  });\n  // Ici j'ajoute control à la map\n  control.addTo(map)\n  if (getZoom) {\n    // Ajout d'un écouteur d'évenement, ici on écoute la fin du zoom de l'utilisateur et appel de la fonction getZoom disponible depuis CreateGroup\n    map.on('zoomend', (e) => {\n      getZoom(e);\n    })\n  }\n  // Ici j'écoute à la soumission de la recherche et quand j'obtiens les résultats je vais mettre à jour le state pour avoir le marker sur l'adresse recherchée\n  control.on('results', (results) => {\n    // console.log('je suis dans controle', results.latlng)\n    setLatLng(results.latlng.lat, results.latlng.lng)\n  })\n  // Ici j'écoute le click sur la map et je vais récupérer les données du lieux cliqué (City la plus proche, adress et country)\n  const geocoder = L.Control.Geocoder.nominatim();\n  map.on('click', e => {\n    // Fonction pour trouver l'adresse par rapport aux coordonées\n    geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), results => {\n      updateValueCountry(results[0].properties.address.country);\n      updateValueCity(results[0].properties.address.municipality)\n      updateValueAdress(results[0].properties.address.road)\n    })\n  })\n}, [setLatLng]);\n\n  return <div id=\"map\">\n  {/* // Au clic sur la map je vais j'appelle la fonction onClick qui est dispo depuis CreateGroup */}\n    <Map ref={mapRef} center={[latitude, longitude]} zoom={getZoom ? valueZoom : zoom} onClick={handleOnClick}>\n      <TileLayer  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n      />\n      {/* Ici je test si getZoom est présent simplement pour que le bout de code suivant ne soit accessible que depuis CreateGroup */}\n      {getZoom && (\n        <Marker position={[latitude, longitude]}>\n        <Popup>\n          <h3>{name}</h3>\n          <p>{description}</p>\n          <p>{adress}</p>\n          <p>Autour de : {city}</p>\n          <p>{country}</p>\n        </Popup>\n      </Marker>\n      )}\n      {/* La je viens map pour afficher les markers sur la page home (fonction disponible depuis home et récupéré plus haut) */}\n      {markers && (\n        markers.map((map) => (\n          <Marker position={[map.latitude, map.longitude]} key={map.id} icon={pointerIcon} >\n          <Popup>\n          <h3>{map.name}</h3>\n          <p>{map.description}</p>\n          <a href=\"/inscription\" >Voir la page du groupe</a>\n          </Popup>\n          </Marker>\n        ))\n      )}\n    </Map>\n  </div>\n}\n\nMapLeaf.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  adress: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  updateValueCountry: PropTypes.func.isRequired,\n  updateValueCity: PropTypes.func.isRequired,\n  mapMarkers: PropTypes.func.isRequired,\n  getZoom: PropTypes.func.isRequired,\n  valueZoom: PropTypes.number,\n  handleOnClick: PropTypes.func.isRequired,\n  setLatLng: PropTypes.func.isRequired,\n  updateValueAdress: PropTypes.func.isRequired,\n  //position: PropTypes.func.isRequired, Position est un tableau => A VOIR !\n};\n\nexport default MapLeaf;","export const CHANGE_FIELD_VALUE = 'CHANGE_LOGIN_FIELD_VALUE';\nexport const CHANGE_LATLNG = 'CHANGE_LATLNG';\nexport const CHANGE_ZOOM = 'CHANGE_ZOOM';\nexport const UPDATE_VALUE_COUNTRY = 'UPDATE_VALUE_COUNTRY';\nexport const UPDATE_VALUE_CITY = 'UPDATE_VALUE_CITY';\nexport const UPDATE_VALUE_ADRESS = 'UPDATE_VALUE_ADRESS';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n\n\nexport const changeFieldValue = (value, name) => ({\n    type: CHANGE_FIELD_VALUE,\n    value,\n    name,\n});\n\nexport const setLatin = (latitude, longitude) => ({\n    type: CHANGE_LATLNG,\n    latitude,\n    longitude,\n})\n\nexport const changeZoom = ( valueZoom ) => ({\n    type: CHANGE_ZOOM,\n    valueZoom\n})\n\nexport const updateValueCountry = (value) => ({\n    type: UPDATE_VALUE_COUNTRY,\n    value,\n})\n\nexport const updateValueCity = (value) => ({\n    type: UPDATE_VALUE_CITY,\n    value,\n})\n\nexport const updateValueAdress = (value) => ({\n    type: UPDATE_VALUE_ADRESS,\n    value,\n})\n\nexport const createGroup = () => ({\n    type: CREATE_GROUP,\n})\n\n\n","import { connect } from 'react-redux';\nimport MapLeaf from '../Components/Map';\nimport { setLatin, updateValueCountry, updateValueCity, updateValueAdress } from '../actions/createGroup';\n\nconst mapStateToProps = (state) => ({\n    latitude: state.createGroup.group.latitude,\n    longitude: state.createGroup.group.longitude,\n    // position: state.createGroup.position,\n    city: state.createGroup.city,\n    country: state.createGroup.country,\n    adress: state.createGroup.adress,\n    markers: state.map.markers,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLatLng: (latitude, longitude) => {\n    dispatch(setLatin(latitude, longitude))\n  },\n  updateValueCountry: (value) => {\n    dispatch(updateValueCountry(value))\n  },\n  updateValueCity: (value) => {\n    dispatch(updateValueCity(value))\n  },\n  updateValueAdress: (value) => {\n    dispatch(updateValueAdress(value))\n  },\n});\n\n// Container\nconst MapLeafContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MapLeaf);\n\n// == Export\nexport default MapLeafContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n//Import Components\n\n// Import Css\nimport './homeContent.scss';\n\nconst HomeContent = () => {\n// CODER LA METHODE ISLOGGED & HANDLELOGOUT\n    return(\n        <div className=\"home-content\">\n            <div className=\"container\">\n\n\n\n                    <div className=\"home-content-container\">\n                        <h1 className=\"home-content-title_role\">On inverse les rôles !</h1>\n                        <p className=\"home-content-text_role\">\n                            <strong>Et si votre animal prenait les commandes ?</strong> Découvrez des points de rencontre où votre animal serait suceptible de faire des rencontres ! Discutez avec les membres du groupe que vous rejoignez.\n                            Organisez des balades, des ateliers, des pic-nic avec les meilleurs croquettes !\n                        </p>\n                    </div>\n                <img src=\"/ContentHome1.jpeg\" alt=\"Image d'accueil\" className=\"home-content-img\" />\n\n                    <div className=\"home-content-container \">\n                        <h1 className=\"home-content-title_role\">Garder le contact</h1>\n                        <p className=\"home-content-text_role\">\n                            <strong>Et si votre animal prenait les commandes ?</strong> Découvrez des points de rencontre où votre animal serait suceptible de faire des rencontres ! Discutez avec les membres du groupe que vous rejoignez.\n                            Organisez des balades, des ateliers, des pic-nics avec les meilleurs croquettes !\n                        </p>\n                    </div>\n\n\n            </div>\n                <div className=\"home-content-button\">\n                    <div className=\"home-content-signUp\">\n                        <Link to=\"/inscription\" className=\"home-content-cta\">Je m'inscris </Link>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default HomeContent;","import React, { useEffect } from 'react';\nimport Slider from \"react-slick\";\nimport CardLastDog from '../CardsLastDogs/CardLastDog';\n// Import Components\n\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n// Import CSS\nimport './sliderPart.scss';\n\n\nconst SliderPart = ({lastDogs}) => {\n  // lastDogs est bien un tableau d'objets\n  // console.log('DATA DES DERNIERS CHIENS', lastDogs)\n// ICI fetch pour aller récupérer les data des last DOG mais boucle infinie...\n// Pourtant il y a bien le []\n// Peut etre un pb dans le middleware ??\n\n// J'ai mis en commentaire le useEffect mais tu peux le décommenter pour faire des test, attention la boucle infinie est HARD ^^\n\nvar settings = {\n      dots: true,\n      infinite: false,\n      speed: 10000,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      initialSlide: 0,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        },\n        {\n          breakpoint: 900,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2\n          }\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }\n      ]\n    };\nconsole.log(\"JE SUIS LASTDOGS\", lastDogs);\n  return (\n    // <div className=\"find-group\">\n    //   CGU\n    // </div>\n  <div className=\"wrapper\">\n\n\n      <div>\n        <h2 className=\"slider-title\"> Derniers membres inscrits</h2>\n        <Slider {...settings}>\n\n          {lastDogs.map((dog) => (\n          <div className=\"wrapper-card\">\n            <CardLastDog key={dog.id} {...dog}/>\n          </div>\n          ))}\n        </Slider>\n      </div>\n    </div>\n    );\n\n}\nexport default SliderPart;\n","import { connect } from 'react-redux';\nimport SliderPart from '../Components/SliderPart';\nimport {\n  getData\n} from '../actions/home';\n\nconst mapStateToProps = (state) => ({\n  // Je viens récupérer le tab de dogs rempli grace au fetch du middleware\n// lastDogs: state.sliderPart.sliderDog\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDataDog: () => {\n      dispatch(getData());\n  }\n});\n\n// Container\nconst SliderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SliderPart);\n\n// == Export\nexport default SliderContainer;","export const GET_DATA = 'GET_DATA';\nexport const CHANGE_MARKERS = 'CHANGE_MARKERS';\nexport const DISPLAY_DOG = 'DISPLAY_DOG';\nexport const DISPLAY_MARKERS = 'DISPLAY_MARKERS';\n\n\n\nexport const getData = () => ({\n    type: GET_DATA,\n});\n\nexport const changeMarkers = (allMarkers) => ({\n    type: CHANGE_MARKERS,\n    allMarkers,\n});\n// Ici je destructure pour récupérer l'objet  lastAnimalsSignedUp de result.data et je le place dans le payload\nexport const displayDog = ({lastAnimalsSignedUp}) => ({\n    type: DISPLAY_DOG,\n    lastAnimalsSignedUp,\n});\n\nexport const displayMarkers = ({allGroups}) => ({\n    type: DISPLAY_MARKERS,\n    allGroups\n})","import React, { useEffect } from 'react';\nimport Map from '../../containers/map';\nimport HomeContent from '../HomeContent';\nimport SliderPart from '../../containers/sliderPart';\n\n//Import Components\n\n// Import Css\nimport './home.scss';\n\nconst Home = ({ fetchDataDog, lastDogs}) => {\n    console.log('DATA DES DERNIERS CHIENS', lastDogs)\n\n    // useEffect(() => {\n    //     fetchDataDog();\n    // }, [lastDogs]);\n    \n    const mapMarkers = () => {\n        return '';\n    }\n\n    return(\n        <div className=\"home\">\n        <div className=\"home-map\">\n        {/* Ici j'envoie a map une fonction bidon pour pouvoir tester dans map et ajouter les markers en conséquence (A REVOIR ! Pas très propre..) */}\n        <Map mapMarkers={mapMarkers}/>\n        </div>\n        <SliderPart lastDogs = {lastDogs}/>\n        <HomeContent />\n        </div>\n    )\n}\n\nexport default Home;","import { connect } from 'react-redux';\nimport Home from '../Components/Home';\nimport {\n    getData\n} from '../actions/home';\n\nconst mapStateToProps = (state) => ({\n    //markers: state.map.markers,\n    lastDogs: state.sliderPart.sliderDog\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    // fetchDataDog: () => {\n    //     dispatch(getData());\n    // }\n});\n\n// Container\nconst HomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n\n// == Export\nexport default HomeContainer;","\n\nimport React from 'react';\nimport './CGU.scss';\n\nconst CGU = () => (\n\n\n<div className=\"CGU\">\n\n<h1 className=\"cgu-h1\"> CONDITION GENERALE D'UTILISATION </h1>\n\n<h2 className=\"cgu-title\">1 - PRÉAMBULE</h2> \n\n<p className=\"cgu-content\">Les présentes conditions d’utilisation sont conclues entre tout internaute utilisateur du site internet (ci-après dénommé « l’Utilisateur ») et le site « MeetMyPet.fr», exploité par la société MeetMyPet France ,SAS à capital variable, immatriculée au RCS de Lille Metropole sous le numéro 500 569 405 et dont le siège social est situé 4 boulevard de Mons, 59650 VILLENEUVE D’ASCQ ; ci-après désigné «le Site» ou « MeetMyPet.fr ».\nLa société MeetMyPet France appartient au « RESEAU MeetMyPet ». Celui-ci désigne la société MeetMyPet SA et l’ensemble des sociétés détenues par celle-ci, directement ou indirectement, à hauteur minimum de 10% du capital ou des droits de vote (ci après dénommées « Filiales MeetMyPet » ou « Sociétés du RESEAU MeetMyPet »).</p>\n\n<p className=\"cgu-content\">\nLe site internet « MeetMyPet.fr» désigne le site internet accessible principalement depuis l’URL https://www.MeetMyPet.fr et permettant aux Utilisateurs de bénéficier des fonctionnalités décrites à l’article 2. MeetMyPet.fr restreint l’utilisation de son Site aux seuls Utilisateurs ayant la qualité de particulier et l’utilisant à une fréquence normale. L’utilisation ou l’accès détourné du Site est strictement interdit à toute personne physique ou morale utilisant le Site pour des besoins professionnels ou dans le cadre d’une activité professionnelle accessoire.</p>\n\n<p className=\"cgu-content\">Pour les besoins des présentes, le terme «Utilisation» regroupe toutes les opérations effectuées par l’Internaute dès l’accès au Site, en ce compris sa simple consultation, quel qu’en soit le dispositif d’accès (notamment, ordinateur, tablette et Smartphone), le type de connexion (connexion privée, connexion d’un tiers ou Wi-fi public) et le lieu de connexion (depuis la France ou l’étranger).</p>\n\n<p className=\"cgu-content\">L’utilisation du Site implique l’acceptation sans réserve des présentes conditions générales par l’Utilisateur. Ces conditions peuvent faire l'objet de modifications. Dès lors, il est entendu que les conditions applicables sont celles en vigueur sur le Site au moment de son utilisation.</p>\n\n<h2 className=\"cgu-title\">2 - FONCTIONNALITÉS PROPOSÉES PAR LE SITE</h2>\n\n<p className=\"cgu-content\">Le Site permet à l’Utilisateur : \n\n- De découvrir les articles et services proposés par les sociétés du RESEAU MeetMyPet ;\n- D’effectuer des achats selon les modalités prévues par Conditions générales de vente du Site ;\n- De publier des avis sur les articles vendus par le RESEAU MeetMyPet ;\n- De publier des photos et/ou vidéos en lien avec des articles vendus par le RESEAU MeetMyPet ;\n- De Participer aux différents jeux et concours proposés par le Site ;\n- D'accéder et de publier des questions et/ou réponses d'autres Utilisateurs relatives aux produits et servicesproposés par MeetMyPet (voir les conditions);\n- De s’inscrire à des activités sportives organisées par le RÉSEAU MeetMyPet (sous réserve d’acceptation des Conditions de participation)\nLa liste des fonctionnalités n'est fournie qu’à titre indicatif. Le Site se réserve le droit d’en ajouter ou d'en supprimer, temporairement ou définitivement, sans l’accord de l'Utilisateur.</p>\n\n<h2 className=\"cgu-title\">3 - CONDITIONS D’UTILISATION DU SITE</h2>\n\n<p className=\"cgu-content\">3.1 Le Site est réservé aux personnes majeures ayant la qualité de particulier ainsi qu’aux mineurs titulaires d’une autorisation parentale. En tout état de cause, MeetMyPet.fr encourage toute personne ayant la responsabilité d’un mineur à contrôler l’utilisation du Site par ce dernier.</p>\n\n<p className=\"cgu-content\"> 3.2 L’accès à certains services proposés par le Site peut être subordonné à la création d’un Compte nécessitant la communication, par l’Utilisateur, d’informations permettant son identification. Au regard des dispositions de la Loi pour la confiance dans l’économie numérique (LCEN) du 6 août 2004 modifiée, MeetMyPet.fr dispose d’une obligation légale de collecte et de conservation de ces données d’identification. L’Utilisateur s’engage à transmettre des données exactes et complètes sur son identité et s’interdit d'usurper l'identité d'un tiers quelconque. Dans le cas contraire, le Site se réserve le droit ne pas confirmer, suspendre ou supprimer le compte.</p>\n\n\n<h2 className=\"cgu-title\">4 - DÉPÔT DE CONTENUS SUR LE SITE</h2>\n\n<p className=\"cgu-content\">4.1 Dans le but de favoriser l’interaction entre les Utilisateurs, MeetMyPet.fr leur propose différents services et modules permanent le dépôt de contenus sur son Site – via notamment le module « Partage de photos». Pour les besoins des présentes, est défini comme « Contenu », tout élément déposé par l’Utilisateur sur le Site, tel que texte, commentaire, image, photo, vidéo, ou tout type de fichier quel qu’en soit le contenu ou la forme.\n\n4.2 L’Utilisateur est responsable de tout ce qui peut se produire en son nom et depuis son terminal informatique. L’Utilisateur s’engage à prévenir immédiatement le Site, dans l’hypothèse où il aurait des raisons de croire que son pseudo ou adresse email est, ou peut être, connu par une personne non autorisée à l’utiliser. Le Site décline toute responsabilité en cas d’utilisation de données personnelles d’un Utilisateur par un tiers non autorisé.\n\n4.3 Le Site ne peut être utilisé qu’à des fins personnelles et non commerciales. L’Utilisateur ne peut en aucun cas communiquer des informations commerciales ou procéder à tout commerce sur le Site, sous quelque forme que ce soit et à quelque titre que ce soit.</p>\n\n\n<h2 className=\"cgu-title\">5 - COMPORTEMENT SUR LE SITE</h2>\n\n<p className=\"cgu-content\">L’Utilisateur s’interdit notamment de :\n\n- Commettre un quelconque agissement illégal ;\n- Extraire ou collecter des données personnelles d’utilisateurs du Site par un moyen quelconque ;\n- Extraire, enregistrer ou exploiter, à d’autres fins que l’unique affichage lors de la navigation sur le présent Site, les contenus de tiers soumis à droits de propriété intellectuelle, relatifs à la vie privée, données personnelles ou droits à image ;\n- Stocker, diffuser ou publier tout contenu illégal, préjudiciable, injurieux, raciste, incitant à la haine, révisionniste,\ncontraire aux bonnes mœurs, portant atteinte à la vie privée ou portant atteinte aux droits privatifs de tiers, notamment le droit à l’image des personnes et des biens, le droit de propriété intellectuelle ou le droit au respect de la vie privée.\n- Stocker, diffuser ou publier, toute information permettant de révéler, directement ou indirectement, ses opinions politiques, philosophiques ou religieuses, son appartenance syndicale, son état santé ou son orientation sexuelle ;\n- Déposer des contenus pour le compte d’un tiers ;\n- Usurper l’identité d’un tiers et/ou publier toute information personnelle d’un tiers ;\n- Stocker, diffuser ou publier tout contenu pouvant porter atteinte, directement ou indirectement, aux intérêts du Réseau MeetMyPet.\nD'une manière générale, l’Utilisateur s’engage à s’abstenir de tout comportement contraire à l’éthique sportive ou aux valeurs et intérêts du Réseau MeetMyPet.</p>\n\n<h2 className=\"cgu-title\">6 - PROPRIÉTÉ INTELLECTUELLE</h2>\n\n<p className=\"cgu-content\">\n6.1 Contenu publié par le Site\nLe Contenu sur le Site est soumis à des droits de propriété et protégé au titre de la propriété intellectuelle, notamment droits d’auteurs, dessins et modèles, marques, noms de domaine, brevets, savoir-faire, logiciels ou bases de données. Le RÉSEAU MeetMyPet et ses partenaires restent propriétaires de l’ensemble de ces Contenus et droits associés.\nSur ces Contenus, le RÉSEAU MeetMyPet accorde aux Utilisateurs une licence limitée, non-exclusive, révocable, sans droit de sous-licencier pour les simples accès, navigation et utilisation liés au Site. Cette licence n’accorde aux Utilisateurs aucun autre droit, en particulier aucun droit d’exploitation commerciale de ces Contenus.</p>\n\n<p className=\"cgu-content\">6.2 Contenu publié par les Utilisateurs\n\nL’ensemble des Contenus (notamment textes, commentaires, fichiers, images, photos, vidéos, œuvres, etc… ), éventuellement soumis à des droits de propriété, propriété intellectuelle, droit à l’image ou autre droit privatif restent la propriété de l’Utilisateur, sous réserve des droits limités accordés par la licence définie ci-dessous au RESEAU MeetMyPet ou de l'application, au cas par cas, d'autres conditions particulières préalablement acceptées pour des services spécifiques potentiellement disponibles sur les sites du RESEAU MeetMyPet. Les Utilisateurs sont libres de publier ou non de tels Contenus sur le Site via notamment le service « Partage de photos » et acceptent que ces Contenus deviennent publics et librement accessibles notamment sur Internet. Ils reconnaissent, s’engagent et garantissent disposer de l’ensemble des droits et autorisations nécessaires pour une telle publication sur le Site, notamment au titre de la législation en vigueur et des droits au respect de la vie privée, de propriété, de la propriété intellectuelle, à l’image, des contrats ou de toute autre nature. Par une telle publication sur le Site, les Utilisateurs ont conscience d'engager leur responsabilité en tant qu'éditeur du Contenu au sens de la loi, et accordent sur le dit Contenu, pour toute la durée de publication, à MeetMyPet, une licence non exclusive, gratuite, mondiale, incluant les droits de reproduction, de représentation, de chargement, d’affichage, d’exécution, de transmission, de stockage, ainsi que de sous-licencier, notamment à ses filiales, partenaires techniques et autres Utilisateurs du Site. </p>\n\n<p className=\"cgu-content\">\nLes Utilisateurs autorisent également que leur nom puisse être associé au Contenu et acceptent que cette association ne soit pas toujours faite. Par leur publication, les Utilisateurs autorisent qu'un Contenu puisse devenir automatiquement accessible sur internet, notamment sur d'autres sites et/ou blogs et/ou pages web du Réseau MeetMyPet incluant notamment les pages des réseaux sociaux MeetMyPet ou des Utilisateurs des sites MeetMyPet pouvant partager certaines contenus. Les Utilisateurs peuvent demander à MeetMyPet de faire cesser leur publication dans le respect des modalités prévues à l’article 8 des présentes conditions d’utilisation.\nEn postant un avis ou commentaire sur le « Service Avis MeetMyPet », l’Utilisateur reconnaît que cet avis devient public et accorde aux sociétés du Groupe MeetMyPet et leurs partenaires dûment autorisés le droit d'utiliser, de stocker, de publier, de traduire, de créer des travaux dérivés, d’exploiter, de distribuer et d'afficher le contenu, en intégralité ou par extrait, de l'avis et/ou du commentaire, dans le cadre de l’éventuelle protection au titre des droits de propriété intellectuelle dont ils pourraient bénéficier, et d'utiliser le nom et/ou prénom fourni avec l’avis ou le commentaire pour toutes finalités, notamment commerciales et publicitaires, sur tous supports, notamment internet, emailing (papier et/ou online), affichage, balisage, publicités sur le lieu de vente, tract, publicité, magazine, supports télévisés et radiophoniques et supports assimilés, dans le monde entier et ce pour une durée de 10 ans.</p>\n\n\n\n<h2 className=\"cgu-title\">7 - RESPONSABILITÉ</h2>\n\n<p className=\"cgu-content\">7.1 Responsabilité de MeetMyPet.fr </p>\n\n<p className=\"cgu-content\"> 7.1.1 La consultation et l’utilisation du Site se fait sous la responsabilité de l’Utilisateur. Le Site peut héberger des liens vers des sites tiers. En cliquant sur ces liens, l’Utilisateur reconnait que MeetMyPet.fr ne peut garantir le contenu de ceux-ci, et accepte par conséquent d’y accéder à ses propres risques. En conséquence, MeetMyPet.fr ne saurait être tenu responsable des dommages qui résulteraient de l’accès et/ou de l’utilisation du Site et des informations qu’il contient. L’Utilisateur est en outre informé que MeetMyPet.fr peut être amené à interrompre momentanément l’accès au Site pour des raisons techniques, notamment pour les raisons de sa maintenance. L’Utilisateur accepte ces interruptions et renonce à toute réclamation à ce sujet. L’utilisation du Site par l’Utilisateur implique la connaissance et l’acceptation des caractéristiques et des limites des technologies inhérentes à Internet, notamment en ce qui concerne les temps de réponse pour consulter ou interroger le serveur hébergeant le Site, les performances techniques, les risques d’interruption et, plus généralement, tout risque encouru lors de la transmission des données.\nPar conséquent, MeetMyPet.fr et, plus généralement, le RÉSEAU MeetMyPet ne sauraient en aucune circonstance être tenus responsables, sans que cette liste ne soit limitative :</p>\n<p className=\"cgu-content\">\n- De toute information consultée sur le Site qui ne serait pas mise en ligne par MeetMyPet.fr\n- De tout disfonctionnement du réseau empêchant le bon fonctionnement du Site\n- De perte de toute donnée\n- Du disfonctionnement de tout logiciel\n- Des conséquences de tout virus informatique, bogue (bug), anomalie ou défaillance\n- De tout dommage causé à l’ordinateur de l’Utilisateur. </p>\n<p className=\"cgu-content\"> 7.1.2 L’activité de MeetMyPet.fr se limite à mettre en relation les Utilisateurs et à héberger les contenus publiés par ces derniers. En sa qualité d’hébergeur, au sens de l'article 6.I.2 de la Loi pour la confiance dans l’économie numérique du 21 juin 2004 modifiée, MeetMyPet.fr ne peut voir sa responsabilité engagée du fait des activités ou des contenus stockés sur son Site. La responsabilité de MeetMyPet.fr se limite à celle prévue par les articles 6.I.2. et suivants de la Loi précitée. Le Site pourra donc supprimer tout contenu illicite ou manifestement illicite sans avertissement préalable, préavis, conformément aux dispositions de l’article 6.I.3 de ladite Loi. En conséquence, MeetMyPet.fr n'est pas tenu d'exercer un contrôle a priori sur la qualité, la sûreté, la véracité ou la licéité des Contenus déposés par les Utilisateurs. </p>\n\n<p className=\"cgu-content\"> 7.2 Responsabilité de l’Utilisateur </p>\n\n<p className=\"cgu-content\">7.2.1 En utilisant le Site, l’Utilisateur accepte de dégager la responsabilité du RESEAU MeetMyPet et de le garantir de tout dommage, coûts et frais, directs et indirects, découlant de :\n\n- Toute réclamation d’un tiers concernant tout contenu déposé en son nom, notamment pour violation de droits sur le contenu publié par l’Utilisateur sur le Site ou délits de presse en rapport avec les éléments envoyés ou publiés sur le Site;\n- Toute activité relative à la participation sur le Site contraire aux présentes conditions générales, y compris dans un but frauduleux ; - La violation des présentes Conditions d’utilisation du Site.</p>\n\n<p className=\"cgu-content\">7.2.2 Decatlhlon.fr tient à sensibiliser ses Utilisateurs quant à la publication de Contenus, tels que les prises de vues ou autres photos des Utilisateurs.\nMeetMyPet.fr attire l’attention de ses Utilisateurs sur la nécessité de publier ou partager des photographies, images ou vidéos respectueuses et conformes à l’étique du sport et aux valeurs du RESEAU MeetMyPet. Tout Contenu non conforme sera systématiquement retiré du Site.</p>\n\n<h2 className=\"cgu-title\">8 - SUPPRESSION DES CONTENUS DÉPOSÉS PAR LES UTILISATEURS</h2>\n\n<p className=\"cgu-content\">8.1 MeetMyPet.fr pourra résilier toute inscription et/ou supprimer tout profil et/ou tout contenu et/ou toute information publiée sur le Site et/ou interdire l'utilisation et/ou l'accès au Site, dès connaissance du non-respect par l’Utilisateur des présentes conditions générales d’utilisation ou pour des raisons techniques. Cette modification ou suppression pourra s’effectuer sans préavis, sans notification ou avertissement préalable, à tout moment et à l’entière discrétion de MeetMyPet.fr.\nVia la procédure « Signaler un abus », chaque Utilisateur peut informer le Site, en joignant l’ensemble des précisions nécessaires au traitement de sa demande, qu’un Contenu est présumé publié en violation des présentes conditions d’utilisation.</p>\n\n<p className=\"cgu-content\"> 8.2 L’Utilisateur dispose également de la possibilité de supprimer les Contenus déposés sur le Site. Pour ce faire, il doit formuler une demande de retrait du Contenu via le formulaire de contact.\nCette demande doit impérativement s’accompagner des informations permettant l’identification dudit contenu. Pour les contenus déposés via le service « Partage de photos », les informations nécessaires à la suppression sont les suivantes : nom, prénom, adresse-email utilisés lors du dépôt du contenu, année du dépôt, titre du contenu.\nToute demande fondée et légitime sera traitée dans les meilleurs délais par MeetMyPet.fr sans que ce dernier ne puisse garantir une suppression immédiate de l'accès au contenu, l'Utilisateur reconnaît que MeetMyPet.fr ne saurait engager une quelconque responsabilité à cet égard, notamment du fait du délai nécessaire de traitement de sa demande, de contrainte technique ou d'impossibilité matérielle d'y répondre notamment dans le cas où le Contenu aurait été repris par des tiers.</p>\n\n<h2 className=\"cgu-title\">9 – INTÉGRALITÉ</h2>\n\n<p className=\"cgu-content\">Si une ou plusieurs stipulations des conditions générales d’utilisation sont déclarées nulles ou caduques par application d’une loi, d’un règlement ou à la suite d’une décision judiciaire ou administrative définitive, les autres stipulations garderont leur force et leur portée. MeetMyPet.fr fera ses meilleurs efforts pour procéder dès que possible à son remplacement par une stipulation valide et d’une portée la plus proche à l’esprit des présentes. Le fait que l’une des parties n’ait pas exigé l’application d’une clause quelconque des présentes conditions, d’une façon permanente ou temporaire, ne pourra en aucun cas être considéré comme une renonciation à ladite clause.</p>\n\n<h2 className=\"cgu-title\">10 - DROIT APPLICABLE / LITIGES</h2>\n<p className=\"cgu-content\"> Les présentes conditions générales d’utilisation sont gouvernées par le droit français.</p>\n\n</div>\n);\n\nexport default CGU;","import React from 'react';\nimport PropTypes from 'prop-types';\n// Import Components\n\n// Import CSS\n\n\n\nconst GroupCard = ({ lastActivity, nameGroup, description, city, numbers }) => {\n  return (\n    <div className=\"group-card\">\n      <form action=\"\" className=\"group-card-form\">\n        <div className=\"group-card-activity\">Dernière activité : {lastActivity}</div>\n        <div className=\"group-card-name\">{nameGroup}</div>\n        <div className=\"group-card-description\">{description}</div>\n        <div className=\"group-card-info\">\n          <div className=\"group-card-info-city\">{city},</div>\n          <div className=\"group-card-info-number\"> Nombre de membres : {numbers}</div>\n        </div>\n        <button type=\"submit\" className=\"group-card-btn\">Rejoindre le groupe</button>\n      </form>\n    </div>\n  );\n}\n\nGroupCard.propTypes = {\n  lastActivity: PropTypes.string.isRequired,\n  nameGroup: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  numbers: PropTypes.string.isRequired,\n};\n\nexport default GroupCard;","import React from 'react';\nimport GroupCard from '../GroupCards/GroupCard/index'\n// Import Components\n\n// Import CSS\nimport './myGroups.scss';\n\n\nconst MyGroups = () => {\n  return (\n    <div className=\"my-groups\">\n      <GroupCard />\n      <GroupCard />\n      <GroupCard />\n      <GroupCard />\n      <GroupCard />\n    </div>\n  );\n}\n\nexport default MyGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GroupCard from './GroupCard'\n// Import Components\n\n// Import CSS\nimport './groupcards.scss';\n\n\nconst GroupCards = ({ dataFindGroup }) => {\n  return (\n    <div className=\"group-cards\">\n      {dataFindGroup.map((group) => (\n        <GroupCard key={group.id} {...group} />\n      ))}\n    </div>\n  );\n}\n\n\nGroupCards.propTypes = {\n  dataFindGroup: PropTypes.arrayOf(\n    PropTypes.shape({\n    }).isRequired\n  ).isRequired\n}\n\nexport default GroupCards;","import React from 'react';\nimport GroupCards from '../GroupCards'\nimport PropTypes from 'prop-types';\n// Import Components\n\n// Import CSS\nimport './findGroup.scss';\n\nconst dataFindGroup = [\n  {\n    id: 1,\n    lastActivity : '25 octobre',\n    nameGroup: 'Les zinzins',\n    description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book',\n    city: 'Nantes',\n    numbers: 25,\n  },\n  {\n    id: 2,\n    lastActivity : '5 septembre',\n    nameGroup: 'Les chevres de monsieur Seguin',\n    description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book',\n    city: 'Nantes',\n    numbers: 2,\n  },\n  {\n    id: 3,\n    lastActivity : '18 octobre',\n    nameGroup: 'Les zinzins',\n    description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book',\n    city: 'Nantes',\n    numbers: 10,\n  },\n]\n\n\nconst FindGroup = ({name, changeField}) => {\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Ici je vais pouvoir faire un fetch en GET pour aller chercher les groupes avec la valeur du champ NAME !\n    // Et envoyer les data au composant GroupCards\n  }\n\n  return (\n    <div className=\"find-group\">\n      <form className=\"find-group-form\" onSubmit={handleSubmit}>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={((event) => changeField(event.target.value, \"name\"))}\n          type=\"text\"\n          placeholder=\"Trouver un groupe\"\n          className=\"find-group-form-input\"\n        />\n        <button type=\"submit\" className=\"find-group-form-btn\">Rechercher</button>\n      </form>\n      <div className=\"find-group-cards\">\n        <GroupCards dataFindGroup={dataFindGroup}/>\n      </div>\n    </div>\n  );\n}\n\nFindGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  changeField: PropTypes.func.isRequired,\n};\n\n\n\nexport default FindGroup;\n","import { connect } from 'react-redux';\nimport FindGroup from '../Components/FindGroup';\nimport { changeFieldValue } from '../actions/findGroup';\n\nconst mapStateToProps = (state) => ({\n    name: state.findGroup.name,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeField: (inputValue, inputName) => {\n    dispatch(changeFieldValue(inputValue, inputName));\n  },\n});\n\n// Container\nconst FindGroupContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(FindGroup);\n\n// == Export\nexport default FindGroupContainer;","export const CHANGE_FIELD_VALUE = 'CHANGE_LOGIN_FIELD_VALUE';\n\nexport const changeFieldValue = (value, name) => ({\n    type: CHANGE_FIELD_VALUE,\n    value,\n    name,\n});\n","import React from 'react';\n// Import Components\n\n// Import CSS\n// import './createGroup.scss';\n\n\nconst FieldCreateGroup= ({value, onChange, type, placeholder, name, label }) => {\n\n    const handleChange = (evt) => {\n        onChange(evt.target.value, name);\n      };\n  return (\n    <div className=\"create-group-inputLabel\">\n      <label htmlFor=\"\" className=\"create-group-label\">{label}</label>\n      <input\n        // React - state\n        required\n        value={value}\n        onChange={handleChange}\n        // infos de base\n        // id={inputId}\n        type={type}\n        className=\"create-group-input\"\n        placeholder={placeholder}\n        name={name}\n      />\n    </div>\n  );\n}\n\nexport default FieldCreateGroup;","import React from 'react'\nimport { TextArea } from 'semantic-ui-react'\n\nconst TextAreaExample = ({ placeholder, value, onChange, name }) => {\n\n  const handleChange = (evt) => {\n    onChange(evt.target.value, name);\n  };\n    return(\n  <div className=\"create-group-inputLabel\">\n    <label\n          // htmlFor={inputId}\n          className=\"create-group-label\"\n        >\n          {placeholder}\n    </label>\n    <TextArea required placeholder={placeholder} className=\"create-group-input\" value={value} onChange={handleChange} name={name}/>\n  </div>\n)\n}\n\nexport default TextAreaExample","import React from 'react';\nimport Map from '../../containers/map';\nimport FielCreateGroup from './FieldCreateGroup';\nimport TextArea from './FieldCreateGroup/textArea';\nimport PropTypes from 'prop-types';\n// Import Components\n\n// Import CSS\nimport './createGroup.scss';\n\nconst CreateGroup= ({name, description, changeField, setLatLng, changeZoom, zoom, createGroup }) => {\n\n  const addMarker = (e) => {\n    console.log(e.latlng)\n    // Ici je viens mettre à jour les données dans le state de CreateGroup (lat et lng)\n    setLatLng(e.latlng.lat, e.latlng.lng)\n  }\n\n  const getZoom = (e) => {\n    // Dispatch pour changer le zoom dans le reducer\n    // console.log('zoom terminé', e.target._animateToZoom)\n    // Ici on appelle changeZoom() pour aller changer le zoom dans le state\n    changeZoom(e.target._animateToZoom)\n  }\n\n  const handleCreateGroup = (e) => {\n    e.preventDefault();\n    createGroup()\n  }\n\n  return (\n    <div className=\"create-group\">\n      <div className=\"create-group-title\">Ajouter un marker sur la carte</div>\n      <form action=\"\" className=\"create-group-form\" onSubmit={handleCreateGroup}>\n        \n      <div className=\"create-group-map\">\n      {/* Ici je passe la fonction addMarker qui va mettre les données à jours, donc cette fonction est accessible que dans createGroup ! */}\n        <Map\n          handleOnClick={addMarker}\n          name={name}\n          description={description}\n          getZoom={getZoom}\n          valueZoom={zoom}\n        />\n      </div>\n      \n      <FielCreateGroup\n            name=\"name\"\n            label=\"Nom du groupe\"\n            placeholder=\"Nom du groupe\"\n            type=\"text\"\n            onChange={changeField}\n            value={name}\n        />\n        <TextArea\n            name=\"description\"\n            label=\"Description\"\n            placeholder=\"Description\"\n            type=\"text\"\n            onChange={changeField}\n            value={description}\n        />\n        <button type=\"submit\" className=\"create-group-btn\">Créer le groupe</button>\n      </form>\n    </div>\n  );\n}\n\nCreateGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  adress: PropTypes.string.isRequired,\n  changeField: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n  changeFieldSelect: PropTypes.func.isRequired,\n  setLatin: PropTypes.func.isRequired,\n};\n\nexport default CreateGroup;","import { connect } from 'react-redux';\nimport CreateGroup from '../Components/CreateGroup';\nimport { changeFieldValue, setLatin, changeZoom, createGroup } from '../actions/createGroup';\n\nconst mapStateToProps = (state) => ({\n    name: state.createGroup.group.name,\n    address: state.createGroup.group.address,\n    description: state.createGroup.group.description,\n    latitude: state.createGroup.group.latitude,\n    longitude: state.createGroup.group.longitude,\n    zoom: state.createGroup.zoom\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeField: (inputValue, inputName) => {\n    dispatch(changeFieldValue(inputValue, inputName));\n  },\n  setLatLng: (latitude, longitude) => {\n    dispatch(setLatin(latitude, longitude))\n  },\n  changeZoom: (valueZoom) => {\n    dispatch(changeZoom(valueZoom))\n  },\n  createGroup: () => {\n    dispatch(createGroup())\n  },\n});\n\n// Container\nconst CreateGroupContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CreateGroup);\n\n// == Export\nexport default CreateGroupContainer;","// == Import : npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// == Import : local\n\n// == Composant\nconst Field = ({\n  value,\n  type,\n  name,\n  placeholder,\n  onChange,\n  inputName,\n}) => {\n  const handleChange = (evt) => {\n    onChange(evt.target.value, name);\n  };\n\n  const inputId = `field-${name}`;\n\n  // const inputRef = useRef();\n  // console.log(inputRef)\n  \n\n  return (\n    <div className=\"signUp-card-form-content\">\n      \n\n      <label\n        htmlFor={inputId}\n        className=\"signUp-card-form-content-label\"\n      >\n        {placeholder}\n      </label>\n      <input\n        // React - state\n        required\n        ref={inputName}\n        value={value}\n        onChange={handleChange}\n        // infos de base\n        id={inputId}\n        type={type}\n        className=\"signUp-card-form-content-input\"\n        placeholder={placeholder}\n        name={name}\n      />\n    </div>\n  );\n};\n\nField.propTypes = {\n  value: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// == Export\nexport default Field;","import React from 'react'\nimport { Select } from 'semantic-ui-react'\n\nconst SelectExample = ({ placeholder, options, name, onChange, value }) => {\n  // Ici je viens récupérer dynamiquement la valeur sélectionée et le name du champ\n  const handleChangeSelect = (event, data) => {\n    onChange(data.value, name);\n  }\n\n  return(\n  <div className=\"signUp-card-form-content\">\n    <label\n          className=\"signUp-card-form-content-label\"\n        >\n          {placeholder}\n    </label>\n    <Select\n      required\n      className=\"select-animal\"\n      placeholder={placeholder}\n      options={options}\n      onChange={handleChangeSelect}\n      value={value}\n    />\n  </div>\n)\n  }\n\nexport default SelectExample;","import React from 'react'\nimport { TextArea } from 'semantic-ui-react'\n\nconst TextAreaExample = ({ placeholder, value, onChange, name }) => {\n\n  const handleChange = (evt) => {\n    onChange(evt.target.value, name);\n  };\n    return(\n  <div className=\"signUp-card-form-content\">\n    <label\n          // htmlFor={inputId}\n          className=\"signUp-card-form-content-label\"\n        >\n          {placeholder}\n    </label>\n    <TextArea placeholder={placeholder} className=\"textarea-animal\" value={value} onChange={handleChange} name={name} required/>\n  </div>\n)\n}\n\nexport default TextAreaExample","// == Import : npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// == Import : local\n\n// == Composant\nconst Field = ({\n  value,\n  type,\n  name,\n  placeholder,\n  onChange,\n  inputName,\n}) => {\n  const handleChange = (event) => {\n    onChange(event.target.files[0] , name);\n\n    console.log(event.target.files[0])\n  };\n\n  const inputId = `field-${name}`;\n  \n  return (\n    <div className=\"signUp-card-form-content\">\n      <label\n        htmlFor={inputId}\n        className=\"signUp-card-form-content-label\"\n      >\n        {placeholder}\n      </label>\n      <input\n        // React - state\n        // value={value}\n        onChange={handleChange}\n        // infos de base\n        id={inputId}\n        type={type}\n        className=\"profil-card-photo-item-input\"\n        placeholder={placeholder}\n        name={name}\n      />\n    </div>\n  );\n};\n\nField.propTypes = {\n  value: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// == Export\nexport default Field;","import React, { useEffect, useRef } from 'react';\nimport { Checkbox } from 'semantic-ui-react'\nimport Field from './SignUpField';\nimport ReactCardFlip from 'react-card-flip';\nimport SelectField from './SignUpField/selectField';\nimport TextAreaField from './SignUpField/textArea';\nimport InputFile from './SignUpField/inputFile';\nimport PropTypes from 'prop-types';\n// Import Components\n\n// Import CSS\nimport './signUp.scss';\n\nconst sexe = [\n  { value: 'Mâle',text: 'Mâle'},\n  { value: 'Femelle',text: 'Femelle'},\n]\n\nconst race = [\n  {value: 'Affenpinscher',text: \"Affenpinscher\"},\n  {value: 'Airedale Terrier',text: \"Airedale Terrier\"},\n  {value: 'Akita américain',text: \"Akita américain\"},\n  {value: 'Akita Inu',text: \"Akita Inu\"},\n  {value: 'Aki In',text: \"Aki In\"},\n]\n\nconst age = [\n  {value: '1',text: \"1\"},\n  {value: '2',text: \"2\"},\n  {value: '3',text: \"3\"},\n  {value: '4',text: \"4\"},\n  {value: '5',text: \"5\"},\n]\n\nconst taille = [\n  {value: 'petit',text: \"petit\"},\n  {value: 'grand',text: \"grand\"},\n  {value: 'médium',text: \"médium\"},\n]\n\n\nconst SignUp= ({\n  first_name,\n    email,\n    password,\n    address,\n    city,\n    changeFieldUser,\n    name,\n    description,\n    breed,\n    size,\n    sex,\n    agee,\n    changeFieldSelect,\n    isFlipped,\n    changeIsFlipped,\n    tosChek,\n    changeCheckTos,\n    createUser,\n    changeFieldAnimal,\n    createAnimal,\n    img,\n  }) => {\n\n  // const handleSubmit = (evt) => {\n  //   evt.preventDefault();\n  //   // Ici j'appelle createUser pour soumettre mon formulaire, dispatch qui va faire une requête POST dans le middleware\n  //   createUser();\n  // };\n\n  const inputName = useRef(null);\n// Focus sur l'input \"Prénom\" à la création du composant Field\n  useEffect(() => {\n    inputName.current.focus()\n  }, [inputName])\n\n// Fonction pour retourner à l'étape précédente\n  const handleClick = (e) => {\n      changeIsFlipped();\n  }\n\n  const handleCreateUser = (e) => {\n    e.preventDefault();\n    // Je test si le user à bien accepté les CGU, si OUI => Je tourne la carte\n    if (tosChek) {\n      // Fonction pour retourner la carte au click\n      createUser();\n    }\n  }\n\n  const handleCreateAnimal = (e) => {\n    e.preventDefault();\n    createAnimal();\n  }\n\n  const checkTosCheckOrNot = () => {\n    // Fonction va changer le state, si le user accepte les CGU je vais passer la valeur à true\n    changeCheckTos();\n  }\n\n\n  return (\n    <div className=\"signUp\">\n    <div className=\"fullCard\">\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\" flipSpeedBackToFront={0.8} flipSpeedFrontToBack={0.8} infinite={true} >\n      <div className=\"signUp-card front\">\n      <h2 className=\"signUp-title\">Inscription</h2>\n        <form action=\"\" className=\"signUp-card-form\" onSubmit={handleCreateUser} autocomplete=\"on\">\n\n          <Field\n            inputName={inputName}\n            name=\"first_name\"\n            placeholder=\"Votre prénom\"\n            onChange={changeFieldUser}\n            value={first_name}\n            type=\"text\"\n          />\n          <Field\n            name=\"email\"\n            placeholder=\"Adresse Email\"\n            type=\"email\"\n            onChange={changeFieldUser}\n            value={email}\n          />\n          <Field\n            name=\"password\"\n            placeholder=\"Mot de passe\"\n            type=\"password\"\n            onChange={changeFieldUser}\n            value={password}\n          />\n          <Field\n            name=\"address\"\n            placeholder=\"Adresse\"\n            onChange={changeFieldUser}\n            value={address}\n          />\n          <Field\n            name=\"city\"\n            placeholder=\"Ville\"\n            onChange={changeFieldUser}\n            value={city}\n          />\n\n          <Checkbox label=\"Accepter les conditions générales d'utilisation\" onClick={checkTosCheckOrNot}\n          className=\"signUp-card-form-content\"\n          />\n          <div className=\"signUp-card-form-btn\">\n          <button\n            type=\"submit\"\n            className=\"signUp-card-form-btn-submit\"\n            // onClick={(() => console.log('click !'))}\n          >\n            Prochaine étape 1/2\n          </button>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"signUp-card animal back\">\n        <form action=\"\" className=\"signUp-card-form\" onSubmit={handleCreateAnimal} autocomplete=\"on\">\n        <p>Prénom de mon maître : {first_name}</p>\n\n        <InputFile\n              // inputName={Inputname}\n              name=\"img\"\n              placeholder=\"Photo de profil\"\n              type=\"file\"\n              onChange={changeFieldAnimal}\n              value={img}\n            />\n        <Field\n            name=\"name\"\n            placeholder=\"Nom de l'animal\"\n            onChange={changeFieldAnimal}\n            value={name}\n            \n          />\n\n          <SelectField\n            name=\"breed\"\n            placeholder=\"Choisir la race\"\n            options={race}\n            onChange={changeFieldSelect}\n            value={breed}\n          />\n\n          <SelectField\n            name=\"sex\"\n            placeholder=\"Sexe\"\n            options={sexe}\n            onChange={changeFieldSelect}\n            value={sex}\n          />\n\n          <SelectField\n            name=\"age\"\n            placeholder=\"Age\"\n            options={age}\n            onChange={changeFieldSelect}\n            value={agee}\n          />\n\n          <SelectField\n            name=\"size\"\n            placeholder=\"Taille\"\n            options={taille}\n            onChange={changeFieldSelect}\n            value={size}\n          />\n\n          <TextAreaField\n            name=\"description\"\n            placeholder='Description'\n            onChange={changeFieldAnimal}\n            value={description}\n          />\n\n          <div className=\"signUp-card-form-btn\">\n          {/* <button\n            className=\"signUp-card-form-btn-submit\"\n            onClick={handleClick}\n          >\n            Revenir à l'étape précédente\n          </button> */}\n          <button\n            type=\"submit\"\n            className=\"signUp-card-form-btn-submit\"\n          >\n            Etape 2/2\n          </button>\n          </div>\n        </form>\n      </div>\n      </ReactCardFlip>\n      </div>\n    </div>\n  );\n}\n\nSignUp.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  adress: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  changeField: PropTypes.func.isRequired,\n  nameAnimal: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  breed: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  sex: PropTypes.string.isRequired,\n  agee: PropTypes.number.isRequired,\n  changeFieldSelect: PropTypes.func.isRequired,\n  isFlipped: PropTypes.func.isRequired,\n  changeIsFlipped: PropTypes.func.isRequired,\n  tosChek: PropTypes.bool.isRequired,\n  changeCheckTos: PropTypes.func.isRequired,\n  createUser: PropTypes.func.isRequired,\n};\n\nexport default SignUp;","export const CHANGE_FIELD_VALUE_USER = 'CHANGE_FIELD_VALUE_USER';\nexport const CHANGE_FIELD_VALUE_ANIMAL = 'CHANGE_FIELD_VALUE_ANIMAL';\nexport const HANDLE_SIGN_UP = 'HANDLE_SIGN_UP';\nexport const CHANGE_FIELD_SELECT = 'CHANGE_FIELD_SELECT';\nexport const CHANGE_IS_FLIPPED = 'CHANGE_IS_FLIPPED';\nexport const CHANGE_CHECK_TOS = 'CHANGE_CHECK_TOS';\nexport const CREATE_USER = 'CREATE_USER';\nexport const CREATE_ANIMAL = 'CREATE_ANIMAL';\nexport const SAVE_ID_USER = 'SAVE_ID_USER'\n\n\n\nexport const changeFieldValueUser = (value, name) => ({\n  type: CHANGE_FIELD_VALUE_USER,\n  value,\n  name,\n});\n\nexport const changeFieldValueAnimal = (value, name) => ({\n  type: CHANGE_FIELD_VALUE_ANIMAL,\n  value,\n  name,\n});\n\nexport const handleSignUp = () => ({\n  type: HANDLE_SIGN_UP,\n});\n\nexport const changeFieldSelect = (value, name) => ({\n  type: CHANGE_FIELD_SELECT,\n  value,\n  name\n});\n\nexport const changeIsFlipped = () => ({\n  type: CHANGE_IS_FLIPPED,\n});\n\nexport const changeCheckTos = () => ({\n  type: CHANGE_CHECK_TOS\n});\n\nexport const createUser = () => ({\n  type: CREATE_USER\n});\n\nexport const createAnimal = () => ({\n  type: CREATE_ANIMAL\n});\n\nexport const saveIdUser = ({ user_id }) => ({\n  type: SAVE_ID_USER,\n  user_id,\n})\n\n\n","import { connect } from 'react-redux';\nimport SignUp from '../Components/SignUp';\nimport {\n  changeFieldValueUser,\n  handleSignUp,\n  changeFieldSelect,\n  changeIsFlipped,\n  changeCheckTos,\n  createUser,\n  changeFieldValueAnimal,\n  createAnimal\n} from '../actions/signUp';\n\nconst mapStateToProps = (state) => ({\n    tosChek: state.signUp.tosChek,\n    isFlipped: state.signUp.isFlipped,\n    first_name: state.signUp.user.first_name,\n    email: state.signUp.user.email,\n    password: state.signUp.user.password,\n    address: state.signUp.user.address,\n    city: state.signUp.user.city,\n    name: state.signUp.animal.name, \n    description: state.signUp.animal.description,\n    sex: state.signUp.animal.sex,\n    size: state.signUp.animal.size,\n    breed: state.signUp.animal.breed,\n    agee: state.signUp.animal.age,\n    img: state.signUp.animal.img,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFieldUser: (inputValue, inputName) => {\n    dispatch(changeFieldValueUser(inputValue, inputName));\n  },\n  changeFieldAnimal: (inputValue, inputName) => {\n    dispatch(changeFieldValueAnimal(inputValue, inputName));\n  },\n  handleSignUp: () => {\n    dispatch(handleSignUp());\n  },\n  changeFieldSelect: (selectFieldValue, selectFieldName) => {\n    dispatch(changeFieldSelect(selectFieldValue, selectFieldName));\n  },\n  changeIsFlipped: (selectFieldValue, selectFieldName) => {\n    dispatch(changeIsFlipped(selectFieldValue, selectFieldName));\n  },\n  changeCheckTos: () => {\n    dispatch(changeCheckTos());\n  },\n  createUser: () => {\n    dispatch(createUser());\n  },\n  createAnimal: () => {\n    dispatch(createAnimal());\n  },\n});\n\n// Container\nconst SignUpContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUp);\n\n// == Export\nexport default SignUpContainer;","// import React from 'react';\n// import PropTypes from 'prop-types';\n// // Import Components\n// import Field from './InputProfil';\n// import SelectField from './InputProfil/selectField';\n// import TextAreaField from './InputProfil/textAreaField';\n// import InputFile from './InputProfil/fileInput';\n\n// // Import CSS\n// import './profil.scss';\n\n// const sexe = [\n//   {value: 'Mâle',text: \"Mâle\"},\n//   {value: 'Femelle',text: \"Femelle\"},\n// ]\n\n// const race = [\n//   {value: 'Affenpinscher',text: \"Affenpinscher\"},\n//   {value: 'Airedale Terrier',text: \"Airedale Terrier\"},\n//   {value: 'Akita américain',text: \"Akita américain\"},\n//   {value: 'Akita Inu',text: \"Akita Inu\"},\n//   {value: 'Azawakh',text: \"Azawakh\"},\n// ]\n\n// const ageData = [\n//   {value: '1',text: \"1\"},\n//   {value: '2',text: \"2\"},\n//   {value: '3',text: \"3\"},\n//   {value: '4',text: \"4\"},\n//   {value: '5',text: \"5\"},\n// ]\n\n// const taille = [\n//   {value: 'petit',text: \"petit\"},\n//   {value: 'grand',text: \"grand\"},\n//   {value: 'médium',text: \"médium\"},\n// ]\n\n\n// const Profil = ({name, nameAnimal, description, sex, size, breed, age, changeField}) => {\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault()\n//     // Ici je vais pouvoir faire un fetch en patch ? pour changer les news données !\n//   }\n\n//   return (\n//     <div className=\"profil\">\n//       <div className=\"profil-card\">\n//         <form action=\"\" className=\"profil-card-form\" onSubmit={handleSubmit}>\n//           <div className=\"profil-card-photo\">\n//             <img src=\"/image/dog1.jpg\" alt=\"photode profil\" className=\"profil-card-photo-item\" />\n//             <InputFile\n//               // inputName={Inputname}\n//               name=\"name\"\n//               placeholder=\"Photo de profil\"\n//               type=\"file\"\n//               // onChange={changeField}\n//               // value={name}\n//             />\n//           </div>\n\n//           <div className=\"profil-card-info\">\n\n//             <Field\n//               name=\"name\"\n//               placeholder=\"Le nom de ton maître\"\n//               onChange={changeField}\n//               value={name}\n//             />\n\n//             <Field\n//               name=\"name\"\n//               placeholder=\"Ton prénom\"\n//               onChange={changeField}\n//               value={nameAnimal}\n//             />\n\n//             <SelectField\n//               name=\"sex\"\n//               placeholder=\"Sexe\"\n//               type=\"select\"\n//               options={sexe}\n//               onChange={changeField}\n//               value={sex}\n//             />\n\n//             <SelectField\n//               name=\"breed\"\n//               placeholder=\"Choisir la race\"\n//               type=\"select\"\n//               options={race}\n//               onChange={changeField}\n//               value={breed}\n//             />\n\n//             <SelectField\n//               name=\"age\"\n//               placeholder=\"Ton age\"\n//               type=\"select\"\n//               options={ageData}\n//               onChange={changeField}\n//               value={age}\n//             />\n\n//             <SelectField\n//               name=\"size\"\n//               placeholder=\"Ta taille\"\n//               type=\"select\"\n//               options={taille}\n//               onChange={changeField}\n//               value={size}\n//             />\n\n//             <TextAreaField\n//               name=\"description\"\n//               placeholder='Description'\n//               onChange={changeField}\n//               value={description}\n//             />\n\n//           <button\n//             type=\"submit\"\n//             className=\"signUp-card-form-btn-submit\"\n//             // onClick={handleClick}\n//           >\n//             Enregistrer les modifications\n//           </button>\n\n//           </div>\n//         </form>\n//       </div>\n \n//     </div>\n//   );\n// }\n\n// Profil.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   changeField: PropTypes.func.isRequired,\n//   nameAnimal: PropTypes.string.isRequired,\n//   description: PropTypes.string.isRequired,\n//   breed: PropTypes.string.isRequired,\n//   size: PropTypes.number.isRequired,\n//   sex: PropTypes.string.isRequired,\n//   age: PropTypes.number.isRequired,\n// };\n\n// export default Profil;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Checkbox } from 'semantic-ui-react'\nimport Field from '../SignUp/SignUpField';\nimport ReactCardFlip from 'react-card-flip';\nimport SelectField from '../SignUp/SignUpField/selectField';\nimport TextAreaField from '../SignUp/SignUpField/textArea';\nimport InputFile from '../SignUp/SignUpField/inputFile';\nimport PropTypes from 'prop-types';\n// Import Components\n\n// Import CSS\nimport '../SignUp/signUp.scss';\n\nconst sexe = [\n  { value: 'Mâle',text: 'Mâle'},\n  { value: 'Femelle',text: 'Femelle'},\n]\n\nconst race = [\n  {value: 'Affenpinscher',text: \"Affenpinscher\"},\n  {value: 'Airedale Terrier',text: \"Airedale Terrier\"},\n  {value: 'Akita américain',text: \"Akita américain\"},\n  {value: 'Akita Inu',text: \"Akita Inu\"},\n  {value: 'Aki In',text: \"Aki In\"},\n]\n\nconst age = [\n  {value: '1',text: \"1\"},\n  {value: '2',text: \"2\"},\n  {value: '3',text: \"3\"},\n  {value: '4',text: \"4\"},\n  {value: '5',text: \"5\"},\n]\n\nconst taille = [\n  {value: 'petit',text: \"petit\"},\n  {value: 'grand',text: \"grand\"},\n  {value: 'médium',text: \"médium\"},\n]\n\n\nconst Profil= ({\n    first_name,\n    email,\n    password,\n    adress,\n    city,\n    changeFieldUser,\n    name,\n    description,\n    breed,\n    size,\n    sex,\n    agee,\n    changeFieldSelect,\n    isFlipped,\n    changeIsFlipped,\n    tosChek,\n    changeCheckTos,\n    createUser,\n    changeFieldAnimal,\n    createAnimal,\n  }) => {\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    // Ici j'appelle createUser pour soumettre mon formulaire, dispatch qui va faire une requête POST dans le middleware\n    createUser();\n  };\n\n  const inputName = useRef(null);\n// Focus sur l'input \"Prénom\" à la création du composant Field\n  useEffect(() => {\n    inputName.current.focus()\n  }, [inputName])\n\n// Fonction pour retourner à l'étape précédente\n  const handleClick = (e) => {\n      changeIsFlipped();\n  }\n\n  const handleCreateUser = (e) => {\n    e.preventDefault();\n    // Je test si le user à bien accepté les CGU, si OUI => Je tourne la carte\n    if (tosChek) {\n      // Fonction pour retourner la carte au click\n      createUser();\n    }\n  }\n\n  const handleCreateAnimal = (e) => {\n    e.preventDefault();\n    createAnimal();\n  }\n\n  const checkTosCheckOrNot = () => {\n    // Fonction va changer le state, si le user accepte les CGU je vais passer la valeur à true\n    changeCheckTos();\n  }\n\n\n  return (\n    <div className=\"signUp\">\n    <div className=\"fullCard\">\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\" flipSpeedBackToFront={0.8} flipSpeedFrontToBack={0.8} infinite={true} >\n      <div className=\"signUp-card front\">\n      <h2 className=\"signUp-title\">Profil</h2>\n        <form action=\"\" className=\"signUp-card-form\" onSubmit={handleCreateUser} autocomplete=\"on\">\n\n          <Field\n            inputName={inputName}\n            name=\"first_name\"\n            placeholder=\"Votre prénom\"\n            onChange={changeFieldUser}\n            value={first_name}\n            type=\"text\"\n          />\n          <Field\n            name=\"email\"\n            placeholder=\"Adresse Email\"\n            type=\"email\"\n            onChange={changeFieldUser}\n            value={email}\n          />\n          <Field\n            name=\"password\"\n            placeholder=\"Mot de passe\"\n            type=\"password\"\n            onChange={changeFieldUser}\n            value={password}\n          />\n          <Field\n            name=\"adress\"\n            placeholder=\"Adresse\"\n            onChange={changeFieldUser}\n            value={adress}\n          />\n          <Field\n            name=\"city\"\n            placeholder=\"Ville\"\n            onChange={changeFieldUser}\n            value={city}\n          />\n\n          {/* <Checkbox label=\"Accepter les conditions générales d'utilisation\" onClick={checkTosCheckOrNot}\n          className=\"signUp-card-form-content\"\n          /> */}\n          <div className=\"signUp-card-form-btn\">\n          <button\n            type=\"submit\"\n            className=\"signUp-card-form-btn-submit\"\n            // onClick={(() => console.log('click !'))}\n          >\n            Prochaine étape 1/2\n          </button>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"signUp-card animal back\">\n        <form action=\"\" className=\"signUp-card-form\" onSubmit={handleCreateAnimal} autocomplete=\"on\">\n        <p>Prénom de mon maître : {first_name}</p>\n\n        <InputFile\n              // inputName={Inputname}\n              name=\"name\"\n              placeholder=\"Photo de profil\"\n              type=\"file\"\n              // onChange={changeField}\n              // value={name}\n            />\n        <Field\n            name=\"name\"\n            placeholder=\"Nom de l'animal\"\n            onChange={changeFieldAnimal}\n            value={name}\n            \n          />\n\n          <SelectField\n            name=\"breed\"\n            placeholder=\"Choisir la race\"\n            options={race}\n            onChange={changeFieldSelect}\n            value={breed}\n          />\n\n          <SelectField\n            name=\"sex\"\n            placeholder=\"Sexe\"\n            options={sexe}\n            onChange={changeFieldSelect}\n            value={sex}\n          />\n\n          <SelectField\n            name=\"age\"\n            placeholder=\"Age\"\n            options={age}\n            onChange={changeFieldSelect}\n            value={agee}\n          />\n\n          <SelectField\n            name=\"size\"\n            placeholder=\"Taille\"\n            options={taille}\n            onChange={changeFieldSelect}\n            value={size}\n          />\n\n          <TextAreaField\n            name=\"description\"\n            placeholder='Description'\n            onChange={changeFieldAnimal}\n            value={description}\n          />\n\n          <div className=\"signUp-card-form-btn\">\n          {/* <button\n            className=\"signUp-card-form-btn-submit\"\n            onClick={handleClick}\n          >\n            Revenir à l'étape précédente\n          </button> */}\n          <button\n            type=\"submit\"\n            className=\"signUp-card-form-btn-submit\"\n          >\n            Etape 2/2\n          </button>\n          </div>\n        </form>\n      </div>\n      </ReactCardFlip>\n      </div>\n    </div>\n  );\n}\n\nProfil.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  adress: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  changeField: PropTypes.func.isRequired,\n  nameAnimal: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  breed: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  sex: PropTypes.string.isRequired,\n  agee: PropTypes.number.isRequired,\n  changeFieldSelect: PropTypes.func.isRequired,\n  isFlipped: PropTypes.func.isRequired,\n  changeIsFlipped: PropTypes.func.isRequired,\n  tosChek: PropTypes.bool.isRequired,\n  changeCheckTos: PropTypes.func.isRequired,\n  createUser: PropTypes.func.isRequired,\n};\n\nexport default Profil;\n","import { connect } from 'react-redux';\nimport Profil from '../Components/Profil';\nimport { changeFieldValue } from '../actions/profil';\n\nconst mapStateToProps = (state) => ({\n    first_name: state.profil.user.first_name,\n    email: state.profil.user.email,\n    password: state.profil.user.password,\n    city: state.profil.user.city,\n    adress: state.profil.user.adress,\n    name: state.profil.animal.name,\n    description: state.profil.animal.description,\n    sex: state.profil.animal.sex,\n    size: state.profil.animal.size,\n    breed: state.profil.animal.breed,\n    agee: state.profil.animal.age,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeField: (inputValue, inputName) => {\n    dispatch(changeFieldValue(inputValue, inputName));\n  },\n});\n\n// Container\nconst ProfilContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Profil);\n\n// == Export\nexport default ProfilContainer;","export const CHANGE_FIELD_VALUE = 'CHANGE_FIELD_VALUE';\nexport const CHANGE_FIELD_SELECT = 'CHANGE_FIELD_SELECT';\n\nexport const changeFieldValue = (value, name) => ({\n  type: CHANGE_FIELD_VALUE,\n  value,\n  name,\n});\n\n\nexport const changeFieldSelect = (value, name) => ({\n  type: CHANGE_FIELD_SELECT,\n  value,\n  name\n})","import React , { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon } from 'semantic-ui-react';\n\nimport './formChat.scss';\n\n\nconst FormChat = ({\n    sendMessage,\n    changeMessage,\n    inputValue,\n    addMessage,\n    messages,\n    author\n    }) => {\n\n// const {message, author} = inputValue;\n    //Au clic j'empeche la soummission du formulaire\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Messages AVANT:\", author, inputValue);\n    addMessage(inputValue, author);\n    console.log(\"Messages APRES\", messages);\n}\n//Je verifie le changement d'état de l'event target value en me servant de la fonction que j'ai dispatch dans mon container\n\nconst handleChangeInput = (event) => {\n    changeMessage(event.target.value);\n\n}   \n         const maRef = useRef(null);\n\n    useEffect(() => {\n    maRef.current.focus();\n    }, []);\n\n    return(\n    <form className=\"formMessage\" onSubmit={handleSubmit}>\n    <input\n        ref={maRef}\n        className=\"formMessage-input\"\n        placeholder=\"Votre message\"\n        onChange={handleChangeInput}\n        // value={inputValue}\n    />\n    <button\n    type=\"submit\"\n    className=\"formMessage-submit\"\n    > \n    <Icon name='send' size='large' color=\"teal\"/>\n    </button>\n    </form>\n    )\n}\nFormChat.propTypes = {\n    sendMessage: PropTypes.func.isRequired,\n    changeMessage: PropTypes.func.isRequired,\n};\n\nexport default FormChat;","import { connect } from 'react-redux';\nimport FormChat from '../Components/FormChat';\nimport { addMessage, changeMessage } from '../actions/chat';\n\nconst mapStateToProps = (state) => ({\n    inputValue: state.chat.currentMessage,\n    messages: state.chat.messages,\n    author: state.chat.messages[0].author,\n\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    addMessage: (inputValue, author) => {\n        dispatch(addMessage(inputValue, author));\n    },\n    changeMessage: (message) => {\n        dispatch(changeMessage(message));\n    }\n});\n\n// Container\nconst FormChatContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(FormChat);\n\n// == Export\nexport default FormChatContainer;","export const CHANGE_FIELD_VALUE = 'CHANGE_FIELD_VALUE';\nexport const CHANGE_MESSAGE = 'CHANGE_MESSAGE';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\n\n// Action Creator\nexport const changeFieldValue = (name, value) => ({\n    type: CHANGE_FIELD_VALUE,\n    name,\n    value,\n});\n    export const changeMessage = (currentMessage) => ({\n    type: CHANGE_MESSAGE,\n    currentMessage,\n});\nexport const sendMessage = () => ({\n    type: SEND_MESSAGE,\n});\nexport const addMessage = ( message, author) => ({\n    type: ADD_MESSAGE,\n    message,\n    author,\n});","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './message.scss';\n\n// == Import\n// == Composant\n\n// classNames est une fonction permettant de concatainer des classes avec une logique\n// Ici on met dans tout les cas la classe \"message\"\n// Et si owner vaut true, on mettre la classe en key\n// A savoir \"message--owner\"\n// Si c'est l'owner on aura \"message message--owner\" sinon juste \"message\"\nconst Message = ({ author, message, owner }) => (\n    <div className={classNames('message', { 'message--owner': owner })}>\n        <div className=\"message-img\">\n            <img src=\"image/dog1.jpg\" alt=\"auteur\" className=\"message-author-img\"/>\n            <div className=\"message-author\">{author}</div>\n        </div>\n        <div className=\"message-content\">{message}</div>\n        <div className=\"sendAt\" >Envoyé à 16h02</div>\n    </div>\n);\n\nMessage.defaultProps = {\n    owner: false,\n};\n\nMessage.propTypes = {\n    author: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    owner: PropTypes.bool,\n};\n\n// == Export\nexport default Message;\n","import React, {useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Message from './Message';\n\n\nconst Messages = ({ messages }) => {\n  const messagesDivRef = useRef(null);\n \n  console.log(messages);\n  useEffect(() => {\n\n    messagesDivRef.current.scrollTo(0, messagesDivRef.current.scrollHeight);\n  }, [messages]);\n/* key={`message-${message.id}`} */\n  return (\n    <div className=\"messages\" ref={messagesDivRef}>\n      {\n      messages.map((message) => (\n        <Message  {...message} />\n        \n      ))\n    }\n    </div>\n  );\n};\n\nMessages.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\n// == Export\nexport default Messages;","/* eslint-disable max-len */\nimport { connect } from 'react-redux';\n\nimport Messages from '../Components/Messages';\n\n// Ici on récupère les messages du state\n// == Analogie\n// Tu va dans les rayons tu prends dans un des rayons des pâtes de marques \"messages\" pour faire des messages carbo et tu les mets dans ton panier\nconst mapStateToProps = (state) => ({\n    messages: state.chat.messages,\n});\n\n// On défini les actions qu'on va vouloir faire plus tard dans le composant, ici aucune\n// == Analogie\n// Tu va voir le vendeur et tu lui regarde même pas la tête, tu te casse avec tes messages\nconst mapDispatchToProps = {};\n\n// Ici connect est la fonction permettant de connecter le composant au store\n// Il prends 2 arguments\n// Le premier sert à récupérer des bouts de state et les passer en props\n// Le second sert à récupérer la référence de la fonction dispatch du store afin de pouvoir créer des ordres customs à envoyer\n\n// == Analogie\n// Message il est gêné, il voudrait aller chercher ce qu'il a besoin pour faire sa petite popotte dans le magasin.\n// Donc il faut l'encourage avec un discours \"connect\", ce discour il tient en 2 arguments\n// Le premier c'est tu va dans les rayons du magasin et tu prends ce qu'il te faut\n// Le deuxième c'est tu va parler au vendeur et tu lui donne des ordres\nconst MessagesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Messages); // Ce discours d'encouragement s'applique au composant message\n\n// Le composant étant chargé à bloc avec son discours d'encouragement, il peut donc prévoir d'aller tout seul au store, comme un grand et on sait maintenant qu'il aura des messages ( pour faire sa popotte )\nexport default MessagesContainer;\n","import React, { useEffect }  from 'react';\n// Import Components\nimport Map from '../Map';\nimport FormChat from '../../containers/formChat';\nimport Messages from '../../containers/Messages';\n// Import CSS\nimport './grouppage.scss';\n\n\nconst GroupPage = () => {\n\n  useEffect(() => {\n    // J'ai l'intention d'initier une connexion\n    // Je déclenche donc une action qui va être lue par un middleware\n    // Et interprétée afin d'ouvrire un tube de communication\n    // entre le chat ( client ) et le serveur\n\n\n  }, []);\n\n\n  return (\n    <div className=\"groupPage\">\n      <div className=\"infos-grp\">\n          <h1 className=\"infos-grp-title\">Mon Groupe</h1>\n          <p className=\"infos-grp-ville\">ChevreLand</p>\n          <p className=\"memberNumber\">23 inscrits</p>\n          <div className=\"map\">\n            <Map />\n            <p className=\"mapForDemo\">JE SUIS UNE MAP</p>\n          </div>\n          <p className=\"info-grp-description\">Je suis une description du groupe de chien plutot precise</p>\n      </div>\n      <div className=\"chat-part\">\n        <Messages />\n        <FormChat />\n      </div>\n    </div>\n  );\n}\n\nexport default GroupPage;\n","import { connect } from 'react-redux';\nimport { setLatin } from '../actions/createGroup';\n\nimport GroupPage from '../Components/GroupPage';\n\nconst mapStateToProps = (state) => ({\n    latitude: state.createGroup.position.latitude,\n    longitude: state.createGroup.position.longitude,\n    position: state.createGroup.position,\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLatLng: (latitude, longitude) => {\n    dispatch(setLatin(latitude, longitude))\n  }\n});\n\n// Container\nconst GroupPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GroupPage);\n\n// == Export\nexport default GroupPageContainer;\n","import React from 'react';\n\nimport './notfound.scss';\nconst NotFound = () => (\n    <div className=\"page404\">\n\n            <div>\n                <p className=\"notFound-number\">ERREUR 404</p>\n                <p className=\"notFound-text\">La page n'a pas été trouvée !</p>\n            </div>\n\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport './spinner.scss';\nconst Spinner = () => (\n    <div className=\"spinner\">\n        <Loader\n            type=\"Grid\"\n            color=\"#7fc6a4\"\n            height={100}\n            width={100}\n        />\n    </div>\n);\n\nexport default Spinner;","import React, {useEffect} from 'react';\n// Import Components\nimport Header from '../../containers/header';\nimport Footer from '../Footer';\nimport Home from '../../containers/home';\nimport CGU from '../CGU';\nimport MyGroups from '../MyGroups';\nimport FindGroup from '../../containers/findGroup';\nimport CreateGroup from '../../containers/createGroup';\nimport SignUp from '../../containers/signUp';\nimport Profil from '../../containers/profil';\nimport GroupPage from '../../containers/groupPage';\nimport NotFound from '../NotFound';\nimport Spinner from '../Spinner'\n// import SideBar from '../SideBar';\nimport { Switch, Route } from 'react-router-dom';\n\n// Import CSS\nimport './App.scss';\n\n\nconst App = ({checkIsLogged, loading, fetchDataDog }) => {\n\n  useEffect(() => {\n    // Je vérifie si je suis connecté ou pas\n    checkIsLogged();\n    fetchDataDog();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {loading && <Spinner />}\n      {!loading && (\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/cgu\" component={CGU} />\n          <Route path=\"/inscription\" component={SignUp} />\n          <Route path=\"/profil\" component={Profil} />\n          <Route path=\"/mes-groupes\" component={MyGroups} />\n          <Route path=\"/trouver-un-groupe\" component={FindGroup} />\n          <Route path=\"/creer-un-groupe\" component={CreateGroup} />\n          <Route path=\"/groupe\" component={GroupPage} />\n          {/* For mobile :slug */}\n          {/* <Route path=\"/chat/:slug\" component={Chat} />  */}\n          <Route component={NotFound} />\n        </Switch>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from '../Components/App';\n\nimport { checkIsLogged } from '../actions/loginModal';\nimport {\n  getData\n} from '../actions/home';\n\nconst mapStateToProps = (state) => ({\n  loading: state.spinner.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  checkIsLogged: () => {\n    dispatch(checkIsLogged());\n  },\n  fetchDataDog: () => {\n    dispatch(getData());\n  },\n});\n\n// Container\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\n// == Export\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CHANGE_FIELD_VALUE_USER,\n  CHANGE_FIELD_VALUE_ANIMAL,\n  CHANGE_FIELD_SELECT,\n  CHANGE_IS_FLIPPED,\n  CHANGE_CHECK_TOS,\n  SAVE_ID_USER,\n} from '../actions/signUp';\n  \n  const initialState = {\n    tosChek: false,\n    isFlipped : false,\n    user : {\n      first_name: 'Sofiane',\n      email: 'pean.sofiane@gmail.com',\n      password: 'Coucou@44',\n      city: 'Nantes',\n      address: '23 les coteaux',\n    },\n    animal : {\n      name: 'Rex',\n      description: 'Je suis un chien',\n      sex: '',\n      breed: '',\n      size: '',\n      age: '',\n      user_id: null,\n      img: null\n    },\n  };\n  \n  const signUp = (state = initialState, action = {}) => {\n    switch (action.type) {\n      case CHANGE_FIELD_VALUE_USER : {\n        return {\n          ...state,\n          user : {\n            ...state.user,\n            [action.name]: action.value,\n          }\n        }\n      }\n      case CHANGE_FIELD_VALUE_ANIMAL : {\n        return {\n          ...state,\n          animal : {\n            ...state.animal,\n            [action.name]: action.value,\n          }\n        }\n      }\n      case CHANGE_FIELD_SELECT : {\n        return {\n          ...state,\n          animal : {\n            ...state.animal,\n              [action.name]: action.value,\n          }\n        }\n      }\n      case CHANGE_IS_FLIPPED : {\n        return {\n          ...state,\n          isFlipped: !state.isFlipped,\n        }\n      }\n      case CHANGE_CHECK_TOS : {\n        return {\n          ...state,\n          tosChek: !state.tosChek,\n        }\n      }\n      case  SAVE_ID_USER :\n        return {\n          ...state,\n          animal : {\n            ...state.animal,\n            user_id : action.user_id\n          }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default signUp;","/* eslint-disable no-case-declarations */\nimport {\n    CHANGE_LOGIN_FIELD_VALUE,\n    SAVE_USER,\n    LOG_OUT,\n    OPEN_MODAL,\n    logOut,\n    } from '../actions/loginModal';\n\n    export const initialState = {\n    email: '',\n    password: '',\n    isLogged: false,\n    infos: {},\n    settings : {\n        display: false,\n    }\n};\n\nconst loginModal = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case CHANGE_LOGIN_FIELD_VALUE:\n        return {\n            ...state,\n            [action.name]: action.value,\n        };\n        case SAVE_USER:\n        const newState = {\n            ...state,\n            isLogged: true,\n            email: '',\n            password: '',\n            infos: {},\n        };\n        return newState;\n        case LOG_OUT:\n        return {\n            ...state,\n            isLogged: false,\n            infos: {},\n        };\n        case OPEN_MODAL:\n        return{\n            ...state,\n            settings:{\n                display: !state.settings.display,\n            }\n        };\n        case logOut:\n        return {\n            ...state,\n            isLogged: false,\n            infos: {},\n        };\n\n        default:\n        return state;\n    }\n};\n\nexport default loginModal;\n","import {\n  CHANGE_FIELD_VALUE,\n  CHANGE_LATLNG,\n  CHANGE_ZOOM,\n  UPDATE_VALUE_COUNTRY,\n  UPDATE_VALUE_CITY,\n  UPDATE_VALUE_ADRESS,\n} from '../actions/createGroup';\n  \n  const initialState = {\n    group : {\n      name: '',\n      latitude : '46.57467481018573',\n      longitude: '0.40652893058295453',\n      address: '',\n      city: '',\n      country: '',\n      description: '',  \n      created_by: '',\n      // chatroom_id: 1\n    },\n    zoom: 9, \n  };\n  \n  const createGroup = (state = initialState, action = {}) => {\n      console.log(state)\n    switch (action.type) {\n        case CHANGE_FIELD_VALUE : {\n            return {\n            ...state,\n            group : {\n              ...state.group,\n              [action.name]: action.value,\n            }\n            }\n        }\n        case CHANGE_LATLNG : {\n            return {\n                ...state,\n                group : {\n                  ...state.group,\n                  latitude: action.latitude,\n                  longitude:action.longitude,\n                }\n            }\n        }\n        case CHANGE_ZOOM : {\n          return {\n            ...state,\n              zoom: action.valueZoom\n          }\n        }\n        case UPDATE_VALUE_COUNTRY : {\n          return {\n            ...state,\n            group : {\n              ...state.group,\n              country: action.value,\n            }\n\n          }\n        }\n        case UPDATE_VALUE_CITY : {\n          return {\n            ...state,\n            group : {\n              ...state.group,\n              city: action.value\n            }\n          }\n        }\n        case UPDATE_VALUE_ADRESS : {\n          return {\n            ...state,\n            group : {\n              ...state.group,\n              address: action.value\n            }\n          }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default createGroup;","import { CHANGE_FIELD_VALUE } from '../actions/findGroup';\n  \n  const initialState = {\n    name: '',\n  };\n  \n  const findGroup = (state = initialState, action = {}) => {\n      console.log(state)\n    switch (action.type) {\n        case CHANGE_FIELD_VALUE : {\n            return {\n            ...state,\n            [action.name]: action.value,\n            }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default findGroup;","import { CHANGE_FIELD_VALUE } from '../actions/profil';\n  \n  const initialState = {\n    user : {\n      first_name: 'Sofiane',\n      email: 'pean.sofiane@gmail.com',\n      password: '1234',\n      city: 'Nantes',\n      adress: '23 les coteaux',\n    },\n    animal : {\n      name: 'Rex',\n      description: 'Je suis un chien',\n      sex: 'Mâle',\n      breed: 'Affenpinscher',\n      size: '2',\n      age: '2',\n      user_id: null,\n  },\n}\n  \n  const profil = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case CHANGE_FIELD_VALUE : {\n            return {\n              ...state,\n                [action.name]: action.value,\n            }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default profil;\n\n  ","import { \n    CHANGE_FIELD_VALUE,\n    CHANGE_MESSAGE,\n    ADD_MESSAGE,\n} from '../actions/chat';\n\nconst initialState = {\n    messages: [\n      {\n        message:'Salut a tous !',\n        author:'Joy'\n      },\n      { \n        message:'Vous apercevez le premier jet de la chatRoom',\n        author:'Freddy'\n      }, \n      {\n        message:\"Ceci est un message généré de facon static . il ne manque plus qu'a connecter socket.io\",\n        author:'Nooky'\n      }\n    ],\n    currentMessage: \"\",\n};\n\nconst ChatReducer = (state = initialState, action) => {\nswitch (action.type){\n\n    case CHANGE_MESSAGE:\n        return {\n            ...state,\n            currentMessage: action.currentMessage,\n        };\n    case ADD_MESSAGE:\n      const newMessage = {\n        // author: action.author,\n        message: action.message,\n        author: action.author,\n        }\n        // owner: state.author === action.author,\n      return {\n        messages: [\n          ...state.messages,\n          newMessage,\n        ],\n      };\n\n    default: \n    return state;\n}\n}\n\n\nexport default ChatReducer ;","// import {  \n//     DISPLAY_DOG\n// } from \"../actions/sliderPart\";\n\nimport {\n    DISPLAY_DOG\n} from '../actions/home';\n\n\nconst initialState = {\n    sliderDog: [],\n};\n\nconst SliderReducer = (state = initialState, action) => {\n    switch(action.type){\n        case DISPLAY_DOG:\n        return {\n            ...state,\n            // Ici je remplace le tableau par le new tab de dogs\n            sliderDog :action.lastAnimalsSignedUp,\n        };\n    default: \n    return state;\n    };\n}\n\nexport default SliderReducer;","export const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\nexport const setLoadingState = (valueLoading) => ({\n    type: SET_LOADING_STATE, valueLoading,\n  });","import { SET_LOADING_STATE } from '../actions/spinner';\n  \n  const initialState = {\n    loading: false,\n    }\n  \n  const spinner = (state = initialState, action = {}) => {\n    switch (action.type) {\n      case SET_LOADING_STATE:\n        return {\n          ...state,\n          loading: action.valueLoading,\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default spinner;","import { DISPLAY_MARKERS } from '../actions/home';\n  \n  const initialState = {\n    markers: [],\n}\n  \n  const map = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_MARKERS : {\n            return {\n              ...state,\n                markers: action.allGroups,\n            }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default map;\n","import { combineReducers } from 'redux';\nimport signUp from './signUp'\nimport loginModal from './loginModal';\nimport createGroup from './createGroup';\nimport findGroup from './findGroup';\nimport profil from './profil';\nimport chat from './chat';\nimport sliderPart from './sliderPart';\nimport spinner from './spinner';\nimport map from './map';\n\nexport default combineReducers({\n  signUp,\n  loginModal,\n  createGroup,\n  findGroup,\n  profil,\n  chat,\n  sliderPart,\n  spinner,\n  map,\n});","  \nconst logMiddleware = (store) => (next) => (action) => {\n    console.log(store.getState());\n    console.log('Je laisse passer cette action: ', action);\n    next(action);\n  };\n  \n  export default logMiddleware;","export const baseURL = 'http://ec2-52-86-71-5.compute-1.amazonaws.com:3001';\n","import axios from 'axios';\nimport {\n  CREATE_USER,\n  CREATE_ANIMAL,\n  changeIsFlipped,\n  saveIdUser,\n} from '../actions/signUp';\n\nimport {\n  setLoadingState,\n} from '../actions/spinner';\nimport { baseURL } from '../config';\n\nconst signUpMiddleware = (store) => (next) => (action) => {\n  console.log('DEBUG MIDDLEWARE AUTH :', action);\n  switch (action.type) {\n    case CREATE_USER:\n      store.dispatch(setLoadingState(true));\n      // J'extrait la valeur des champs email et password depuis le sous objet settings du state\n      // Ici je viens récupérer l'objet user dans le reducer signUp\n      const { user } = store.getState().signUp;\n\n      axios.post(`${baseURL}/sign_up_user`, user )\n\n        .then((result) => {\n          store.dispatch(setLoadingState(false));\n          console.log(result.data)\n          store.dispatch(saveIdUser(result.data));\n          store.dispatch(changeIsFlipped())\n        })\n        .catch((error) => {\n          store.dispatch(setLoadingState(false));\n          store.dispatch(saveIdUser(1));\n          store.dispatch(changeIsFlipped())\n        })\n      // si je veux laisser passer l'action je n'oublie pas :\n      next(action);\n      console.log('je next depuis singUp')\n      break;\n      case CREATE_ANIMAL:\n        store.dispatch(setLoadingState(true));\n        const { animal } = store.getState().signUp;\n  \n        axios.post(`${baseURL}/sign_up_animal`, animal )\n  \n          .then((result) => {\n            store.dispatch(setLoadingState(false));\n          })\n          .catch((error) => {\n            store.dispatch(setLoadingState(false));\n          })\n        next(action);\n        break;\n    default:\n      next(action);\n      break;\n  }\n  };\n  export default signUpMiddleware;","/* eslint-disable no-case-declarations */\nimport {\n  LOG_IN,\n  LOG_OUT,\n  saveUser,\n  CHECK_IS_LOGGED,\n  openModal,\n} from '../actions/loginModal';\n\nimport { baseURL } from '../config';\n\nimport axios from 'axios';\n\nconst loginModalMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    // Sur l'action de LOG_IN, je tente de me connecter\n    case LOG_IN:\n      // Je récupère les valeurs des champs email et password\n      // Depuis le state du store\n      const state = store.getState();\n      const { email, password } = state.loginModal;\n      axios.post(`${baseURL}/login`, { email, password }, { withCredentials: true })\n        .then((response) => {\n          console.log(email, password)\n          console.log(\"RESPONSE DATA: \", response.data);\n          store.dispatch(saveUser(response.data));\n          next(action);\n        })\n        .catch((e) => {\n          console.error(e);\n        }).finally(() => {\n          store.dispatch(openModal());\n        });\n      break;\n\n    case CHECK_IS_LOGGED:\n      axios.post(`${baseURL}/isLogged`, {}, {\n        // Sert à envoyer le cookie au serveur\n        // Sans ça, le serveur ne nous connais plus\n        withCredentials: true,\n      }).then((response) => {\n        store.dispatch(saveUser(response.data));\n        next(action);\n      })\n        .catch((e) => {\n          console.error(e);\n        });\n      break;\n    case LOG_OUT:\n      axios.post(`${baseURL}/logout`, {}, {\n        withCredentials: true\n      })\n        // Sert à envoyer le cookie au serveur\n        // Sans ça, le serveur ne nous connais plus\n        .then((result) => {\n          console.log('RESULT LOGOUT', result)\n          next(action);\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n      break;\n    default:\n      next(action);\n      break;\n  }\n};\n\nexport default loginModalMiddleWare;\n","/* eslint-disable no-case-declarations */\nimport {\ndisplayDog,\nFETCH_SLIDER,\n} from '../actions/sliderPart';\n\nimport { baseURL } from '../config';\n\nimport axios from 'axios';\n\nconst sliderMiddleware = (store) => (next) => (action) => {\n    switch (action.type) {\n        // Sur l'action de LOG_IN, je tente de me connecter\n        case FETCH_SLIDER:\n\n        axios.post(`https://meetmypetapo.herokuapp.com/`) // Fetch des 8 derniers inscrits\n            .then((response) => {\n            console.log(\"LES CHIENS: \", response.data);\n            store.dispatch(displayDog(response.data));\n            next(action);\n            })\n            .catch((e) => {\n            console.error(e);\n            }).finally(() => {\n            store.dispatch();\n            next(action);\n            });\n        break;\n\n        default:\n        next(action);\n        break;\n    }\n};\n\nexport default sliderMiddleware;\n","export const DISPLAY_DOG = \"DISPLAY_DOG\";\nexport const FETCH_SLIDER = 'FETCH_SLIDER';\n\nexport const displayDog = (newDog) => ({\n    type : DISPLAY_DOG,\n    newDog,\n});\n\n// Action creators\nexport const fetchSlider = () => ({\n  type: FETCH_SLIDER,\n});","import axios from 'axios';\nimport {\n    CREATE_GROUP,\n} from '../actions/createGroup';\n\nimport {\n  setLoadingState,\n} from '../actions/spinner';\n\nimport { baseURL } from '../config';\n\nconst createGroupMiddleware = (store) => (next) => (action) => {\n  console.log('DEBUG MIDDLEWARE CREATEGROUP :', action);\n  switch (action.type) {\n    case CREATE_GROUP: {\n      store.dispatch(setLoadingState(true));\n      // J'extrait la valeur des champs email et password depuis le sous objet settings du state\n      // Ici je viens récupérer l'objet user dans le reducer signUp\n      const { group } = store.getState().createGroup;\n\n      axios.post(`${baseURL}/group_creation`, group )\n\n        .then((result) => {\n          console.log('Group OK !')\n          store.dispatch(setLoadingState(false));\n          console.log(result);\n        })\n        .catch((error) => {\n          console.error(\"JE SUIS ERROR\", error);\n          store.dispatch(setLoadingState(false));\n          console.log(group)\n        }).finally((result) => {\n          console.log(\"JE SUIS DANS LE FINALLY\",result)\n          // store.dispatch(setLoadingState(false));\n        });\n      // si je veux laisser passer l'action je n'oublie pas :\n      next(action);\n      console.log('je next depuis singUp')\n      break;\n    }\n    default:\n      // si je veux laisser passer l'action je n'oublie pas :\n      next(action);\n      break;\n  }\n  };\n  \n  export default createGroupMiddleware;","import axios from 'axios';\nimport {\n    GET_DATA,\n    displayDog,\n    displayMarkers\n} from '../actions/home';\n\nimport {\n  setLoadingState,\n} from '../actions/spinner';\n\nimport { baseURL } from '../config';\n\n\nconst homeMiddleware = (store) => (next) => (action) => {\n  // console.log('JE PASE DANS MIDDLEWARE HOME')\n    switch (action.type) {\n      case GET_DATA:\n        store.dispatch(setLoadingState(true));\n        // J'extrait la valeur des champs email et password depuis le sous objet settings du state\n        // Ici je viens récupérer l'objet user dans le reducer signUp\n\n        axios.get(`${baseURL}/home`)\n  \n          .then((result) => {\n            //console.log('RESULTAT MIDDLEWARE CHIEN',result.data)\n            //Ici au passage dans le then je vais dispatch l'action pour save les lats Dogs\n            console.log(result.data)\n            store.dispatch(displayDog(result.data))\n            store.dispatch(displayMarkers(result.data))\n            store.dispatch(setLoadingState(false));\n            next(action);\n          })\n          .catch((error) => {\n            console.error(\"JE SUIS ERROR DE MIDDLEWARE HOME\", error);\n            store.dispatch(setLoadingState(false));\n            console.log(error)\n            // next(action);\n          })\n        // si je veux laisser passer l'action je n'oublie pas :\n        next(action);\n        console.log('je next depuis singUp')\n        break;\n    default:\n      // si je veux laisser passer l'action je n'oublie pas :\n      next(action);\n      break;\n    }\n  };\n  \n  export default homeMiddleware;","// == Import : npm\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n// == Import : local\nimport rootReducer from '../reducers';\nimport logMiddleware from '../middlewares/logMiddleware';\nimport signUpMiddleware from '../middlewares/signUpMiddleware';\nimport loginModalMiddleware from '../middlewares/loginModalMiddleware';\nimport sliderMiddleware from '../middlewares/sliderMiddleware';\nimport createGroupMiddleware from '../middlewares/createGroupMiddleware';\nimport homeMiddleware from '../middlewares/homeMiddleware';\n\n\n\n// == Enhancers\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancers = composeEnhancers(\n    applyMiddleware(\n      logMiddleware,\n      signUpMiddleware,\n      loginModalMiddleware,\n      homeMiddleware,\n      sliderMiddleware,\n      createGroupMiddleware,\n      \n    ),\n  );\n\n  // == Store\nconst store = createStore(\n    rootReducer,\n    // preloadedState,\n    enhancers,\n  );\n  \n  // == Export\n  export default store","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './styles/index.scss';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './containers/app';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}